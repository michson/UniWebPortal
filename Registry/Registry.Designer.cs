//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]


namespace Registry
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RegistryEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RegistryEntities object using the connection string found in the 'RegistryEntities' section of the application configuration file.
        /// </summary>
        public RegistryEntities() : base("name=RegistryEntities", "RegistryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RegistryEntities object.
        /// </summary>
        public RegistryEntities(string connectionString) : base(connectionString, "RegistryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RegistryEntities object.
        /// </summary>
        public RegistryEntities(EntityConnection connection) : base(connection, "RegistryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    

        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Admission> Admissions
        {
            get
            {
                if ((_Admissions == null))
                {
                    _Admissions = base.CreateObjectSet<Admission>("Admissions");
                }
                return _Admissions;
            }
        }
        private ObjectSet<Admission> _Admissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Exam> Exams
        {
            get
            {
                if ((_Exams == null))
                {
                    _Exams = base.CreateObjectSet<Exam>("Exams");
                }
                return _Exams;
            }
        }
        private ObjectSet<Exam> _Exams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Student> Students
        {
            get
            {
                if ((_Students == null))
                {
                    _Students = base.CreateObjectSet<Student>("Students");
                }
                return _Students;
            }
        }
        private ObjectSet<Student> _Students;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ticket> Tickets
        {
            get
            {
                if ((_Tickets == null))
                {
                    _Tickets = base.CreateObjectSet<Ticket>("Tickets");
                }
                return _Tickets;
            }
        }
        private ObjectSet<Ticket> _Tickets;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Admissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdmissions(Admission admission)
        {
            base.AddObject("Admissions", admission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Exams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExams(Exam exam)
        {
            base.AddObject("Exams", exam);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Students EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudents(Student student)
        {
            base.AddObject("Students", student);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tickets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTickets(Ticket ticket)
        {
            base.AddObject("Tickets", ticket);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Admission> SPAdmissionsDelete(Nullable<global::System.Int64> code, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Admission>("SPAdmissionsDelete", codeParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Admission> SPAdmissionsDelete(Nullable<global::System.Int64> code, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Admission>("SPAdmissionsDelete", mergeOption, codeParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        public ObjectResult<Admission> SPAdmissionsDeletePermanently(Nullable<global::System.Int64> code)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<Admission>("SPAdmissionsDeletePermanently", codeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        public ObjectResult<Admission> SPAdmissionsDeletePermanently(Nullable<global::System.Int64> code, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<Admission>("SPAdmissionsDeletePermanently", mergeOption, codeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="accountCode">No Metadata Documentation available.</param>
        /// <param name="facultyCode">No Metadata Documentation available.</param>
        /// <param name="departmentCode">No Metadata Documentation available.</param>
        /// <param name="courseCode">No Metadata Documentation available.</param>
        /// <param name="programCode">No Metadata Documentation available.</param>
        /// <param name="awardCode">No Metadata Documentation available.</param>
        /// <param name="levelCode">No Metadata Documentation available.</param>
        /// <param name="entryMode">No Metadata Documentation available.</param>
        /// <param name="studyMode">No Metadata Documentation available.</param>
        /// <param name="sessionCode">No Metadata Documentation available.</param>
        /// <param name="score">No Metadata Documentation available.</param>
        /// <param name="jambScore">No Metadata Documentation available.</param>
        /// <param name="cutOffMax">No Metadata Documentation available.</param>
        /// <param name="admissionStatus">No Metadata Documentation available.</param>
        /// <param name="statusReason">No Metadata Documentation available.</param>
        /// <param name="totalScore">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Admission> SPAdmissionsInsertUpdate(Nullable<global::System.Int64> code, global::System.String universityCode, global::System.String accountCode, Nullable<global::System.Int64> facultyCode, Nullable<global::System.Int64> departmentCode, Nullable<global::System.Int64> courseCode, Nullable<global::System.Int64> programCode, global::System.String awardCode, Nullable<global::System.Int32> levelCode, global::System.String entryMode, global::System.String studyMode, Nullable<global::System.Int64> sessionCode, Nullable<global::System.Int32> score, Nullable<global::System.Int32> jambScore, Nullable<global::System.Int32> cutOffMax, global::System.String admissionStatus, global::System.String statusReason, Nullable<global::System.Int32> totalScore, Nullable<global::System.DateTime> createdOn, global::System.String createdBy, Nullable<global::System.DateTime> modifiedOn, global::System.String modifiedBy, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter accountCodeParameter;
            if (accountCode != null)
            {
                accountCodeParameter = new ObjectParameter("AccountCode", accountCode);
            }
            else
            {
                accountCodeParameter = new ObjectParameter("AccountCode", typeof(global::System.String));
            }
    
            ObjectParameter facultyCodeParameter;
            if (facultyCode.HasValue)
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", facultyCode);
            }
            else
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", typeof(global::System.Int64));
            }
    
            ObjectParameter departmentCodeParameter;
            if (departmentCode.HasValue)
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", departmentCode);
            }
            else
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", typeof(global::System.Int64));
            }
    
            ObjectParameter courseCodeParameter;
            if (courseCode.HasValue)
            {
                courseCodeParameter = new ObjectParameter("CourseCode", courseCode);
            }
            else
            {
                courseCodeParameter = new ObjectParameter("CourseCode", typeof(global::System.Int64));
            }
    
            ObjectParameter programCodeParameter;
            if (programCode.HasValue)
            {
                programCodeParameter = new ObjectParameter("ProgramCode", programCode);
            }
            else
            {
                programCodeParameter = new ObjectParameter("ProgramCode", typeof(global::System.Int64));
            }
    
            ObjectParameter awardCodeParameter;
            if (awardCode != null)
            {
                awardCodeParameter = new ObjectParameter("AwardCode", awardCode);
            }
            else
            {
                awardCodeParameter = new ObjectParameter("AwardCode", typeof(global::System.String));
            }
    
            ObjectParameter levelCodeParameter;
            if (levelCode.HasValue)
            {
                levelCodeParameter = new ObjectParameter("LevelCode", levelCode);
            }
            else
            {
                levelCodeParameter = new ObjectParameter("LevelCode", typeof(global::System.Int32));
            }
    
            ObjectParameter entryModeParameter;
            if (entryMode != null)
            {
                entryModeParameter = new ObjectParameter("EntryMode", entryMode);
            }
            else
            {
                entryModeParameter = new ObjectParameter("EntryMode", typeof(global::System.String));
            }
    
            ObjectParameter studyModeParameter;
            if (studyMode != null)
            {
                studyModeParameter = new ObjectParameter("StudyMode", studyMode);
            }
            else
            {
                studyModeParameter = new ObjectParameter("StudyMode", typeof(global::System.String));
            }
    
            ObjectParameter sessionCodeParameter;
            if (sessionCode.HasValue)
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", sessionCode);
            }
            else
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", typeof(global::System.Int64));
            }
    
            ObjectParameter scoreParameter;
            if (score.HasValue)
            {
                scoreParameter = new ObjectParameter("Score", score);
            }
            else
            {
                scoreParameter = new ObjectParameter("Score", typeof(global::System.Int32));
            }
    
            ObjectParameter jambScoreParameter;
            if (jambScore.HasValue)
            {
                jambScoreParameter = new ObjectParameter("JambScore", jambScore);
            }
            else
            {
                jambScoreParameter = new ObjectParameter("JambScore", typeof(global::System.Int32));
            }
    
            ObjectParameter cutOffMaxParameter;
            if (cutOffMax.HasValue)
            {
                cutOffMaxParameter = new ObjectParameter("CutOffMax", cutOffMax);
            }
            else
            {
                cutOffMaxParameter = new ObjectParameter("CutOffMax", typeof(global::System.Int32));
            }
    
            ObjectParameter admissionStatusParameter;
            if (admissionStatus != null)
            {
                admissionStatusParameter = new ObjectParameter("AdmissionStatus", admissionStatus);
            }
            else
            {
                admissionStatusParameter = new ObjectParameter("AdmissionStatus", typeof(global::System.String));
            }
    
            ObjectParameter statusReasonParameter;
            if (statusReason != null)
            {
                statusReasonParameter = new ObjectParameter("StatusReason", statusReason);
            }
            else
            {
                statusReasonParameter = new ObjectParameter("StatusReason", typeof(global::System.String));
            }
    
            ObjectParameter totalScoreParameter;
            if (totalScore.HasValue)
            {
                totalScoreParameter = new ObjectParameter("TotalScore", totalScore);
            }
            else
            {
                totalScoreParameter = new ObjectParameter("TotalScore", typeof(global::System.Int32));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("CreatedOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("CreatedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("CreatedBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("CreatedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Admission>("SPAdmissionsInsertUpdate", codeParameter, universityCodeParameter, accountCodeParameter, facultyCodeParameter, departmentCodeParameter, courseCodeParameter, programCodeParameter, awardCodeParameter, levelCodeParameter, entryModeParameter, studyModeParameter, sessionCodeParameter, scoreParameter, jambScoreParameter, cutOffMaxParameter, admissionStatusParameter, statusReasonParameter, totalScoreParameter, createdOnParameter, createdByParameter, modifiedOnParameter, modifiedByParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="accountCode">No Metadata Documentation available.</param>
        /// <param name="facultyCode">No Metadata Documentation available.</param>
        /// <param name="departmentCode">No Metadata Documentation available.</param>
        /// <param name="courseCode">No Metadata Documentation available.</param>
        /// <param name="programCode">No Metadata Documentation available.</param>
        /// <param name="awardCode">No Metadata Documentation available.</param>
        /// <param name="levelCode">No Metadata Documentation available.</param>
        /// <param name="entryMode">No Metadata Documentation available.</param>
        /// <param name="studyMode">No Metadata Documentation available.</param>
        /// <param name="sessionCode">No Metadata Documentation available.</param>
        /// <param name="score">No Metadata Documentation available.</param>
        /// <param name="jambScore">No Metadata Documentation available.</param>
        /// <param name="cutOffMax">No Metadata Documentation available.</param>
        /// <param name="admissionStatus">No Metadata Documentation available.</param>
        /// <param name="statusReason">No Metadata Documentation available.</param>
        /// <param name="totalScore">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Admission> SPAdmissionsInsertUpdate(Nullable<global::System.Int64> code, global::System.String universityCode, global::System.String accountCode, Nullable<global::System.Int64> facultyCode, Nullable<global::System.Int64> departmentCode, Nullable<global::System.Int64> courseCode, Nullable<global::System.Int64> programCode, global::System.String awardCode, Nullable<global::System.Int32> levelCode, global::System.String entryMode, global::System.String studyMode, Nullable<global::System.Int64> sessionCode, Nullable<global::System.Int32> score, Nullable<global::System.Int32> jambScore, Nullable<global::System.Int32> cutOffMax, global::System.String admissionStatus, global::System.String statusReason, Nullable<global::System.Int32> totalScore, Nullable<global::System.DateTime> createdOn, global::System.String createdBy, Nullable<global::System.DateTime> modifiedOn, global::System.String modifiedBy, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter accountCodeParameter;
            if (accountCode != null)
            {
                accountCodeParameter = new ObjectParameter("AccountCode", accountCode);
            }
            else
            {
                accountCodeParameter = new ObjectParameter("AccountCode", typeof(global::System.String));
            }
    
            ObjectParameter facultyCodeParameter;
            if (facultyCode.HasValue)
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", facultyCode);
            }
            else
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", typeof(global::System.Int64));
            }
    
            ObjectParameter departmentCodeParameter;
            if (departmentCode.HasValue)
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", departmentCode);
            }
            else
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", typeof(global::System.Int64));
            }
    
            ObjectParameter courseCodeParameter;
            if (courseCode.HasValue)
            {
                courseCodeParameter = new ObjectParameter("CourseCode", courseCode);
            }
            else
            {
                courseCodeParameter = new ObjectParameter("CourseCode", typeof(global::System.Int64));
            }
    
            ObjectParameter programCodeParameter;
            if (programCode.HasValue)
            {
                programCodeParameter = new ObjectParameter("ProgramCode", programCode);
            }
            else
            {
                programCodeParameter = new ObjectParameter("ProgramCode", typeof(global::System.Int64));
            }
    
            ObjectParameter awardCodeParameter;
            if (awardCode != null)
            {
                awardCodeParameter = new ObjectParameter("AwardCode", awardCode);
            }
            else
            {
                awardCodeParameter = new ObjectParameter("AwardCode", typeof(global::System.String));
            }
    
            ObjectParameter levelCodeParameter;
            if (levelCode.HasValue)
            {
                levelCodeParameter = new ObjectParameter("LevelCode", levelCode);
            }
            else
            {
                levelCodeParameter = new ObjectParameter("LevelCode", typeof(global::System.Int32));
            }
    
            ObjectParameter entryModeParameter;
            if (entryMode != null)
            {
                entryModeParameter = new ObjectParameter("EntryMode", entryMode);
            }
            else
            {
                entryModeParameter = new ObjectParameter("EntryMode", typeof(global::System.String));
            }
    
            ObjectParameter studyModeParameter;
            if (studyMode != null)
            {
                studyModeParameter = new ObjectParameter("StudyMode", studyMode);
            }
            else
            {
                studyModeParameter = new ObjectParameter("StudyMode", typeof(global::System.String));
            }
    
            ObjectParameter sessionCodeParameter;
            if (sessionCode.HasValue)
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", sessionCode);
            }
            else
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", typeof(global::System.Int64));
            }
    
            ObjectParameter scoreParameter;
            if (score.HasValue)
            {
                scoreParameter = new ObjectParameter("Score", score);
            }
            else
            {
                scoreParameter = new ObjectParameter("Score", typeof(global::System.Int32));
            }
    
            ObjectParameter jambScoreParameter;
            if (jambScore.HasValue)
            {
                jambScoreParameter = new ObjectParameter("JambScore", jambScore);
            }
            else
            {
                jambScoreParameter = new ObjectParameter("JambScore", typeof(global::System.Int32));
            }
    
            ObjectParameter cutOffMaxParameter;
            if (cutOffMax.HasValue)
            {
                cutOffMaxParameter = new ObjectParameter("CutOffMax", cutOffMax);
            }
            else
            {
                cutOffMaxParameter = new ObjectParameter("CutOffMax", typeof(global::System.Int32));
            }
    
            ObjectParameter admissionStatusParameter;
            if (admissionStatus != null)
            {
                admissionStatusParameter = new ObjectParameter("AdmissionStatus", admissionStatus);
            }
            else
            {
                admissionStatusParameter = new ObjectParameter("AdmissionStatus", typeof(global::System.String));
            }
    
            ObjectParameter statusReasonParameter;
            if (statusReason != null)
            {
                statusReasonParameter = new ObjectParameter("StatusReason", statusReason);
            }
            else
            {
                statusReasonParameter = new ObjectParameter("StatusReason", typeof(global::System.String));
            }
    
            ObjectParameter totalScoreParameter;
            if (totalScore.HasValue)
            {
                totalScoreParameter = new ObjectParameter("TotalScore", totalScore);
            }
            else
            {
                totalScoreParameter = new ObjectParameter("TotalScore", typeof(global::System.Int32));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("CreatedOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("CreatedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("CreatedBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("CreatedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Admission>("SPAdmissionsInsertUpdate", mergeOption, codeParameter, universityCodeParameter, accountCodeParameter, facultyCodeParameter, departmentCodeParameter, courseCodeParameter, programCodeParameter, awardCodeParameter, levelCodeParameter, entryModeParameter, studyModeParameter, sessionCodeParameter, scoreParameter, jambScoreParameter, cutOffMaxParameter, admissionStatusParameter, statusReasonParameter, totalScoreParameter, createdOnParameter, createdByParameter, modifiedOnParameter, modifiedByParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        public ObjectResult<Admission> SPAdmissionsSelect(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Boolean> deleted)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Admission>("SPAdmissionsSelect", codeParameter, universityCodeParameter, deletedParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        public ObjectResult<Admission> SPAdmissionsSelect(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Boolean> deleted, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Admission>("SPAdmissionsSelect", mergeOption, codeParameter, universityCodeParameter, deletedParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Exam> SPExamsDelete(Nullable<global::System.Int64> code, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Exam>("SPExamsDelete", codeParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Exam> SPExamsDelete(Nullable<global::System.Int64> code, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Exam>("SPExamsDelete", mergeOption, codeParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        public ObjectResult<Exam> SPExamsDeletePermanently(Nullable<global::System.Int64> code)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<Exam>("SPExamsDeletePermanently", codeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        public ObjectResult<Exam> SPExamsDeletePermanently(Nullable<global::System.Int64> code, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<Exam>("SPExamsDeletePermanently", mergeOption, codeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="typeCode">No Metadata Documentation available.</param>
        /// <param name="accountCode">No Metadata Documentation available.</param>
        /// <param name="facultyCode">No Metadata Documentation available.</param>
        /// <param name="departmentCode">No Metadata Documentation available.</param>
        /// <param name="courseCode">No Metadata Documentation available.</param>
        /// <param name="programCode">No Metadata Documentation available.</param>
        /// <param name="awardCode">No Metadata Documentation available.</param>
        /// <param name="levelCode">No Metadata Documentation available.</param>
        /// <param name="entryMode">No Metadata Documentation available.</param>
        /// <param name="studyMode">No Metadata Documentation available.</param>
        /// <param name="sessionCode">No Metadata Documentation available.</param>
        /// <param name="dateApplied">No Metadata Documentation available.</param>
        /// <param name="notes">No Metadata Documentation available.</param>
        /// <param name="noOfSitting">No Metadata Documentation available.</param>
        /// <param name="noOfCredits">No Metadata Documentation available.</param>
        /// <param name="noOfPasses">No Metadata Documentation available.</param>
        /// <param name="noOfDistinctions">No Metadata Documentation available.</param>
        /// <param name="noOfFails">No Metadata Documentation available.</param>
        /// <param name="total">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Exam> SPExamsInsertUpdate(Nullable<global::System.Int64> code, global::System.String universityCode, global::System.String typeCode, global::System.String accountCode, Nullable<global::System.Int64> facultyCode, Nullable<global::System.Int64> departmentCode, Nullable<global::System.Int64> courseCode, Nullable<global::System.Int64> programCode, global::System.String awardCode, Nullable<global::System.Int32> levelCode, global::System.String entryMode, global::System.String studyMode, Nullable<global::System.Int64> sessionCode, Nullable<global::System.DateTime> dateApplied, global::System.String notes, Nullable<global::System.Int32> noOfSitting, Nullable<global::System.Int32> noOfCredits, Nullable<global::System.Int32> noOfPasses, Nullable<global::System.Int32> noOfDistinctions, Nullable<global::System.Int32> noOfFails, Nullable<global::System.Int32> total, Nullable<global::System.DateTime> createdOn, global::System.String createdBy, Nullable<global::System.DateTime> modifiedOn, global::System.String modifiedBy, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter typeCodeParameter;
            if (typeCode != null)
            {
                typeCodeParameter = new ObjectParameter("TypeCode", typeCode);
            }
            else
            {
                typeCodeParameter = new ObjectParameter("TypeCode", typeof(global::System.String));
            }
    
            ObjectParameter accountCodeParameter;
            if (accountCode != null)
            {
                accountCodeParameter = new ObjectParameter("AccountCode", accountCode);
            }
            else
            {
                accountCodeParameter = new ObjectParameter("AccountCode", typeof(global::System.String));
            }
    
            ObjectParameter facultyCodeParameter;
            if (facultyCode.HasValue)
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", facultyCode);
            }
            else
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", typeof(global::System.Int64));
            }
    
            ObjectParameter departmentCodeParameter;
            if (departmentCode.HasValue)
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", departmentCode);
            }
            else
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", typeof(global::System.Int64));
            }
    
            ObjectParameter courseCodeParameter;
            if (courseCode.HasValue)
            {
                courseCodeParameter = new ObjectParameter("CourseCode", courseCode);
            }
            else
            {
                courseCodeParameter = new ObjectParameter("CourseCode", typeof(global::System.Int64));
            }
    
            ObjectParameter programCodeParameter;
            if (programCode.HasValue)
            {
                programCodeParameter = new ObjectParameter("ProgramCode", programCode);
            }
            else
            {
                programCodeParameter = new ObjectParameter("ProgramCode", typeof(global::System.Int64));
            }
    
            ObjectParameter awardCodeParameter;
            if (awardCode != null)
            {
                awardCodeParameter = new ObjectParameter("AwardCode", awardCode);
            }
            else
            {
                awardCodeParameter = new ObjectParameter("AwardCode", typeof(global::System.String));
            }
    
            ObjectParameter levelCodeParameter;
            if (levelCode.HasValue)
            {
                levelCodeParameter = new ObjectParameter("LevelCode", levelCode);
            }
            else
            {
                levelCodeParameter = new ObjectParameter("LevelCode", typeof(global::System.Int32));
            }
    
            ObjectParameter entryModeParameter;
            if (entryMode != null)
            {
                entryModeParameter = new ObjectParameter("EntryMode", entryMode);
            }
            else
            {
                entryModeParameter = new ObjectParameter("EntryMode", typeof(global::System.String));
            }
    
            ObjectParameter studyModeParameter;
            if (studyMode != null)
            {
                studyModeParameter = new ObjectParameter("StudyMode", studyMode);
            }
            else
            {
                studyModeParameter = new ObjectParameter("StudyMode", typeof(global::System.String));
            }
    
            ObjectParameter sessionCodeParameter;
            if (sessionCode.HasValue)
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", sessionCode);
            }
            else
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", typeof(global::System.Int64));
            }
    
            ObjectParameter dateAppliedParameter;
            if (dateApplied.HasValue)
            {
                dateAppliedParameter = new ObjectParameter("DateApplied", dateApplied);
            }
            else
            {
                dateAppliedParameter = new ObjectParameter("DateApplied", typeof(global::System.DateTime));
            }
    
            ObjectParameter notesParameter;
            if (notes != null)
            {
                notesParameter = new ObjectParameter("Notes", notes);
            }
            else
            {
                notesParameter = new ObjectParameter("Notes", typeof(global::System.String));
            }
    
            ObjectParameter noOfSittingParameter;
            if (noOfSitting.HasValue)
            {
                noOfSittingParameter = new ObjectParameter("NoOfSitting", noOfSitting);
            }
            else
            {
                noOfSittingParameter = new ObjectParameter("NoOfSitting", typeof(global::System.Int32));
            }
    
            ObjectParameter noOfCreditsParameter;
            if (noOfCredits.HasValue)
            {
                noOfCreditsParameter = new ObjectParameter("NoOfCredits", noOfCredits);
            }
            else
            {
                noOfCreditsParameter = new ObjectParameter("NoOfCredits", typeof(global::System.Int32));
            }
    
            ObjectParameter noOfPassesParameter;
            if (noOfPasses.HasValue)
            {
                noOfPassesParameter = new ObjectParameter("NoOfPasses", noOfPasses);
            }
            else
            {
                noOfPassesParameter = new ObjectParameter("NoOfPasses", typeof(global::System.Int32));
            }
    
            ObjectParameter noOfDistinctionsParameter;
            if (noOfDistinctions.HasValue)
            {
                noOfDistinctionsParameter = new ObjectParameter("NoOfDistinctions", noOfDistinctions);
            }
            else
            {
                noOfDistinctionsParameter = new ObjectParameter("NoOfDistinctions", typeof(global::System.Int32));
            }
    
            ObjectParameter noOfFailsParameter;
            if (noOfFails.HasValue)
            {
                noOfFailsParameter = new ObjectParameter("NoOfFails", noOfFails);
            }
            else
            {
                noOfFailsParameter = new ObjectParameter("NoOfFails", typeof(global::System.Int32));
            }
    
            ObjectParameter totalParameter;
            if (total.HasValue)
            {
                totalParameter = new ObjectParameter("Total", total);
            }
            else
            {
                totalParameter = new ObjectParameter("Total", typeof(global::System.Int32));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("CreatedOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("CreatedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("CreatedBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("CreatedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Exam>("SPExamsInsertUpdate", codeParameter, universityCodeParameter, typeCodeParameter, accountCodeParameter, facultyCodeParameter, departmentCodeParameter, courseCodeParameter, programCodeParameter, awardCodeParameter, levelCodeParameter, entryModeParameter, studyModeParameter, sessionCodeParameter, dateAppliedParameter, notesParameter, noOfSittingParameter, noOfCreditsParameter, noOfPassesParameter, noOfDistinctionsParameter, noOfFailsParameter, totalParameter, createdOnParameter, createdByParameter, modifiedOnParameter, modifiedByParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="typeCode">No Metadata Documentation available.</param>
        /// <param name="accountCode">No Metadata Documentation available.</param>
        /// <param name="facultyCode">No Metadata Documentation available.</param>
        /// <param name="departmentCode">No Metadata Documentation available.</param>
        /// <param name="courseCode">No Metadata Documentation available.</param>
        /// <param name="programCode">No Metadata Documentation available.</param>
        /// <param name="awardCode">No Metadata Documentation available.</param>
        /// <param name="levelCode">No Metadata Documentation available.</param>
        /// <param name="entryMode">No Metadata Documentation available.</param>
        /// <param name="studyMode">No Metadata Documentation available.</param>
        /// <param name="sessionCode">No Metadata Documentation available.</param>
        /// <param name="dateApplied">No Metadata Documentation available.</param>
        /// <param name="notes">No Metadata Documentation available.</param>
        /// <param name="noOfSitting">No Metadata Documentation available.</param>
        /// <param name="noOfCredits">No Metadata Documentation available.</param>
        /// <param name="noOfPasses">No Metadata Documentation available.</param>
        /// <param name="noOfDistinctions">No Metadata Documentation available.</param>
        /// <param name="noOfFails">No Metadata Documentation available.</param>
        /// <param name="total">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Exam> SPExamsInsertUpdate(Nullable<global::System.Int64> code, global::System.String universityCode, global::System.String typeCode, global::System.String accountCode, Nullable<global::System.Int64> facultyCode, Nullable<global::System.Int64> departmentCode, Nullable<global::System.Int64> courseCode, Nullable<global::System.Int64> programCode, global::System.String awardCode, Nullable<global::System.Int32> levelCode, global::System.String entryMode, global::System.String studyMode, Nullable<global::System.Int64> sessionCode, Nullable<global::System.DateTime> dateApplied, global::System.String notes, Nullable<global::System.Int32> noOfSitting, Nullable<global::System.Int32> noOfCredits, Nullable<global::System.Int32> noOfPasses, Nullable<global::System.Int32> noOfDistinctions, Nullable<global::System.Int32> noOfFails, Nullable<global::System.Int32> total, Nullable<global::System.DateTime> createdOn, global::System.String createdBy, Nullable<global::System.DateTime> modifiedOn, global::System.String modifiedBy, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter typeCodeParameter;
            if (typeCode != null)
            {
                typeCodeParameter = new ObjectParameter("TypeCode", typeCode);
            }
            else
            {
                typeCodeParameter = new ObjectParameter("TypeCode", typeof(global::System.String));
            }
    
            ObjectParameter accountCodeParameter;
            if (accountCode != null)
            {
                accountCodeParameter = new ObjectParameter("AccountCode", accountCode);
            }
            else
            {
                accountCodeParameter = new ObjectParameter("AccountCode", typeof(global::System.String));
            }
    
            ObjectParameter facultyCodeParameter;
            if (facultyCode.HasValue)
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", facultyCode);
            }
            else
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", typeof(global::System.Int64));
            }
    
            ObjectParameter departmentCodeParameter;
            if (departmentCode.HasValue)
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", departmentCode);
            }
            else
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", typeof(global::System.Int64));
            }
    
            ObjectParameter courseCodeParameter;
            if (courseCode.HasValue)
            {
                courseCodeParameter = new ObjectParameter("CourseCode", courseCode);
            }
            else
            {
                courseCodeParameter = new ObjectParameter("CourseCode", typeof(global::System.Int64));
            }
    
            ObjectParameter programCodeParameter;
            if (programCode.HasValue)
            {
                programCodeParameter = new ObjectParameter("ProgramCode", programCode);
            }
            else
            {
                programCodeParameter = new ObjectParameter("ProgramCode", typeof(global::System.Int64));
            }
    
            ObjectParameter awardCodeParameter;
            if (awardCode != null)
            {
                awardCodeParameter = new ObjectParameter("AwardCode", awardCode);
            }
            else
            {
                awardCodeParameter = new ObjectParameter("AwardCode", typeof(global::System.String));
            }
    
            ObjectParameter levelCodeParameter;
            if (levelCode.HasValue)
            {
                levelCodeParameter = new ObjectParameter("LevelCode", levelCode);
            }
            else
            {
                levelCodeParameter = new ObjectParameter("LevelCode", typeof(global::System.Int32));
            }
    
            ObjectParameter entryModeParameter;
            if (entryMode != null)
            {
                entryModeParameter = new ObjectParameter("EntryMode", entryMode);
            }
            else
            {
                entryModeParameter = new ObjectParameter("EntryMode", typeof(global::System.String));
            }
    
            ObjectParameter studyModeParameter;
            if (studyMode != null)
            {
                studyModeParameter = new ObjectParameter("StudyMode", studyMode);
            }
            else
            {
                studyModeParameter = new ObjectParameter("StudyMode", typeof(global::System.String));
            }
    
            ObjectParameter sessionCodeParameter;
            if (sessionCode.HasValue)
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", sessionCode);
            }
            else
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", typeof(global::System.Int64));
            }
    
            ObjectParameter dateAppliedParameter;
            if (dateApplied.HasValue)
            {
                dateAppliedParameter = new ObjectParameter("DateApplied", dateApplied);
            }
            else
            {
                dateAppliedParameter = new ObjectParameter("DateApplied", typeof(global::System.DateTime));
            }
    
            ObjectParameter notesParameter;
            if (notes != null)
            {
                notesParameter = new ObjectParameter("Notes", notes);
            }
            else
            {
                notesParameter = new ObjectParameter("Notes", typeof(global::System.String));
            }
    
            ObjectParameter noOfSittingParameter;
            if (noOfSitting.HasValue)
            {
                noOfSittingParameter = new ObjectParameter("NoOfSitting", noOfSitting);
            }
            else
            {
                noOfSittingParameter = new ObjectParameter("NoOfSitting", typeof(global::System.Int32));
            }
    
            ObjectParameter noOfCreditsParameter;
            if (noOfCredits.HasValue)
            {
                noOfCreditsParameter = new ObjectParameter("NoOfCredits", noOfCredits);
            }
            else
            {
                noOfCreditsParameter = new ObjectParameter("NoOfCredits", typeof(global::System.Int32));
            }
    
            ObjectParameter noOfPassesParameter;
            if (noOfPasses.HasValue)
            {
                noOfPassesParameter = new ObjectParameter("NoOfPasses", noOfPasses);
            }
            else
            {
                noOfPassesParameter = new ObjectParameter("NoOfPasses", typeof(global::System.Int32));
            }
    
            ObjectParameter noOfDistinctionsParameter;
            if (noOfDistinctions.HasValue)
            {
                noOfDistinctionsParameter = new ObjectParameter("NoOfDistinctions", noOfDistinctions);
            }
            else
            {
                noOfDistinctionsParameter = new ObjectParameter("NoOfDistinctions", typeof(global::System.Int32));
            }
    
            ObjectParameter noOfFailsParameter;
            if (noOfFails.HasValue)
            {
                noOfFailsParameter = new ObjectParameter("NoOfFails", noOfFails);
            }
            else
            {
                noOfFailsParameter = new ObjectParameter("NoOfFails", typeof(global::System.Int32));
            }
    
            ObjectParameter totalParameter;
            if (total.HasValue)
            {
                totalParameter = new ObjectParameter("Total", total);
            }
            else
            {
                totalParameter = new ObjectParameter("Total", typeof(global::System.Int32));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("CreatedOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("CreatedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("CreatedBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("CreatedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Exam>("SPExamsInsertUpdate", mergeOption, codeParameter, universityCodeParameter, typeCodeParameter, accountCodeParameter, facultyCodeParameter, departmentCodeParameter, courseCodeParameter, programCodeParameter, awardCodeParameter, levelCodeParameter, entryModeParameter, studyModeParameter, sessionCodeParameter, dateAppliedParameter, notesParameter, noOfSittingParameter, noOfCreditsParameter, noOfPassesParameter, noOfDistinctionsParameter, noOfFailsParameter, totalParameter, createdOnParameter, createdByParameter, modifiedOnParameter, modifiedByParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        public ObjectResult<Exam> SPExamsSelect(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Boolean> deleted)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Exam>("SPExamsSelect", codeParameter, universityCodeParameter, deletedParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        public ObjectResult<Exam> SPExamsSelect(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Boolean> deleted, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Exam>("SPExamsSelect", mergeOption, codeParameter, universityCodeParameter, deletedParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Student> SPStudentsDelete(Nullable<global::System.Int64> code, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Student>("SPStudentsDelete", codeParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Student> SPStudentsDelete(Nullable<global::System.Int64> code, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Student>("SPStudentsDelete", mergeOption, codeParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        public ObjectResult<Student> SPStudentsDeletePermanently(Nullable<global::System.Int64> code)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<Student>("SPStudentsDeletePermanently", codeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        public ObjectResult<Student> SPStudentsDeletePermanently(Nullable<global::System.Int64> code, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<Student>("SPStudentsDeletePermanently", mergeOption, codeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="facultyCode">No Metadata Documentation available.</param>
        /// <param name="departmentCode">No Metadata Documentation available.</param>
        /// <param name="programCode">No Metadata Documentation available.</param>
        /// <param name="courseCode">No Metadata Documentation available.</param>
        /// <param name="levelCode">No Metadata Documentation available.</param>
        /// <param name="matricNo">No Metadata Documentation available.</param>
        /// <param name="accountCode">No Metadata Documentation available.</param>
        /// <param name="entryMode">No Metadata Documentation available.</param>
        /// <param name="studyMode">No Metadata Documentation available.</param>
        /// <param name="sessionCode">No Metadata Documentation available.</param>
        /// <param name="admittedOn">No Metadata Documentation available.</param>
        /// <param name="awardCode">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Student> SPStudentsInsertUpdate(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Int64> facultyCode, Nullable<global::System.Int64> departmentCode, Nullable<global::System.Int64> programCode, Nullable<global::System.Int64> courseCode, Nullable<global::System.Int32> levelCode, global::System.String matricNo, global::System.String accountCode, global::System.String entryMode, global::System.String studyMode, Nullable<global::System.Int64> sessionCode, Nullable<global::System.DateTime> admittedOn, global::System.String awardCode, Nullable<global::System.DateTime> createdOn, global::System.String createdBy, Nullable<global::System.DateTime> modifiedOn, global::System.String modifiedBy, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter facultyCodeParameter;
            if (facultyCode.HasValue)
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", facultyCode);
            }
            else
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", typeof(global::System.Int64));
            }
    
            ObjectParameter departmentCodeParameter;
            if (departmentCode.HasValue)
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", departmentCode);
            }
            else
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", typeof(global::System.Int64));
            }
    
            ObjectParameter programCodeParameter;
            if (programCode.HasValue)
            {
                programCodeParameter = new ObjectParameter("ProgramCode", programCode);
            }
            else
            {
                programCodeParameter = new ObjectParameter("ProgramCode", typeof(global::System.Int64));
            }
    
            ObjectParameter courseCodeParameter;
            if (courseCode.HasValue)
            {
                courseCodeParameter = new ObjectParameter("CourseCode", courseCode);
            }
            else
            {
                courseCodeParameter = new ObjectParameter("CourseCode", typeof(global::System.Int64));
            }
    
            ObjectParameter levelCodeParameter;
            if (levelCode.HasValue)
            {
                levelCodeParameter = new ObjectParameter("LevelCode", levelCode);
            }
            else
            {
                levelCodeParameter = new ObjectParameter("LevelCode", typeof(global::System.Int32));
            }
    
            ObjectParameter matricNoParameter;
            if (matricNo != null)
            {
                matricNoParameter = new ObjectParameter("MatricNo", matricNo);
            }
            else
            {
                matricNoParameter = new ObjectParameter("MatricNo", typeof(global::System.String));
            }
    
            ObjectParameter accountCodeParameter;
            if (accountCode != null)
            {
                accountCodeParameter = new ObjectParameter("AccountCode", accountCode);
            }
            else
            {
                accountCodeParameter = new ObjectParameter("AccountCode", typeof(global::System.String));
            }
    
            ObjectParameter entryModeParameter;
            if (entryMode != null)
            {
                entryModeParameter = new ObjectParameter("EntryMode", entryMode);
            }
            else
            {
                entryModeParameter = new ObjectParameter("EntryMode", typeof(global::System.String));
            }
    
            ObjectParameter studyModeParameter;
            if (studyMode != null)
            {
                studyModeParameter = new ObjectParameter("StudyMode", studyMode);
            }
            else
            {
                studyModeParameter = new ObjectParameter("StudyMode", typeof(global::System.String));
            }
    
            ObjectParameter sessionCodeParameter;
            if (sessionCode.HasValue)
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", sessionCode);
            }
            else
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", typeof(global::System.Int64));
            }
    
            ObjectParameter admittedOnParameter;
            if (admittedOn.HasValue)
            {
                admittedOnParameter = new ObjectParameter("AdmittedOn", admittedOn);
            }
            else
            {
                admittedOnParameter = new ObjectParameter("AdmittedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter awardCodeParameter;
            if (awardCode != null)
            {
                awardCodeParameter = new ObjectParameter("AwardCode", awardCode);
            }
            else
            {
                awardCodeParameter = new ObjectParameter("AwardCode", typeof(global::System.String));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("CreatedOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("CreatedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("CreatedBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("CreatedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Student>("SPStudentsInsertUpdate", codeParameter, universityCodeParameter, facultyCodeParameter, departmentCodeParameter, programCodeParameter, courseCodeParameter, levelCodeParameter, matricNoParameter, accountCodeParameter, entryModeParameter, studyModeParameter, sessionCodeParameter, admittedOnParameter, awardCodeParameter, createdOnParameter, createdByParameter, modifiedOnParameter, modifiedByParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="facultyCode">No Metadata Documentation available.</param>
        /// <param name="departmentCode">No Metadata Documentation available.</param>
        /// <param name="programCode">No Metadata Documentation available.</param>
        /// <param name="courseCode">No Metadata Documentation available.</param>
        /// <param name="levelCode">No Metadata Documentation available.</param>
        /// <param name="matricNo">No Metadata Documentation available.</param>
        /// <param name="accountCode">No Metadata Documentation available.</param>
        /// <param name="entryMode">No Metadata Documentation available.</param>
        /// <param name="studyMode">No Metadata Documentation available.</param>
        /// <param name="sessionCode">No Metadata Documentation available.</param>
        /// <param name="admittedOn">No Metadata Documentation available.</param>
        /// <param name="awardCode">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Student> SPStudentsInsertUpdate(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Int64> facultyCode, Nullable<global::System.Int64> departmentCode, Nullable<global::System.Int64> programCode, Nullable<global::System.Int64> courseCode, Nullable<global::System.Int32> levelCode, global::System.String matricNo, global::System.String accountCode, global::System.String entryMode, global::System.String studyMode, Nullable<global::System.Int64> sessionCode, Nullable<global::System.DateTime> admittedOn, global::System.String awardCode, Nullable<global::System.DateTime> createdOn, global::System.String createdBy, Nullable<global::System.DateTime> modifiedOn, global::System.String modifiedBy, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter facultyCodeParameter;
            if (facultyCode.HasValue)
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", facultyCode);
            }
            else
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", typeof(global::System.Int64));
            }
    
            ObjectParameter departmentCodeParameter;
            if (departmentCode.HasValue)
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", departmentCode);
            }
            else
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", typeof(global::System.Int64));
            }
    
            ObjectParameter programCodeParameter;
            if (programCode.HasValue)
            {
                programCodeParameter = new ObjectParameter("ProgramCode", programCode);
            }
            else
            {
                programCodeParameter = new ObjectParameter("ProgramCode", typeof(global::System.Int64));
            }
    
            ObjectParameter courseCodeParameter;
            if (courseCode.HasValue)
            {
                courseCodeParameter = new ObjectParameter("CourseCode", courseCode);
            }
            else
            {
                courseCodeParameter = new ObjectParameter("CourseCode", typeof(global::System.Int64));
            }
    
            ObjectParameter levelCodeParameter;
            if (levelCode.HasValue)
            {
                levelCodeParameter = new ObjectParameter("LevelCode", levelCode);
            }
            else
            {
                levelCodeParameter = new ObjectParameter("LevelCode", typeof(global::System.Int32));
            }
    
            ObjectParameter matricNoParameter;
            if (matricNo != null)
            {
                matricNoParameter = new ObjectParameter("MatricNo", matricNo);
            }
            else
            {
                matricNoParameter = new ObjectParameter("MatricNo", typeof(global::System.String));
            }
    
            ObjectParameter accountCodeParameter;
            if (accountCode != null)
            {
                accountCodeParameter = new ObjectParameter("AccountCode", accountCode);
            }
            else
            {
                accountCodeParameter = new ObjectParameter("AccountCode", typeof(global::System.String));
            }
    
            ObjectParameter entryModeParameter;
            if (entryMode != null)
            {
                entryModeParameter = new ObjectParameter("EntryMode", entryMode);
            }
            else
            {
                entryModeParameter = new ObjectParameter("EntryMode", typeof(global::System.String));
            }
    
            ObjectParameter studyModeParameter;
            if (studyMode != null)
            {
                studyModeParameter = new ObjectParameter("StudyMode", studyMode);
            }
            else
            {
                studyModeParameter = new ObjectParameter("StudyMode", typeof(global::System.String));
            }
    
            ObjectParameter sessionCodeParameter;
            if (sessionCode.HasValue)
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", sessionCode);
            }
            else
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", typeof(global::System.Int64));
            }
    
            ObjectParameter admittedOnParameter;
            if (admittedOn.HasValue)
            {
                admittedOnParameter = new ObjectParameter("AdmittedOn", admittedOn);
            }
            else
            {
                admittedOnParameter = new ObjectParameter("AdmittedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter awardCodeParameter;
            if (awardCode != null)
            {
                awardCodeParameter = new ObjectParameter("AwardCode", awardCode);
            }
            else
            {
                awardCodeParameter = new ObjectParameter("AwardCode", typeof(global::System.String));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("CreatedOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("CreatedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("CreatedBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("CreatedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Student>("SPStudentsInsertUpdate", mergeOption, codeParameter, universityCodeParameter, facultyCodeParameter, departmentCodeParameter, programCodeParameter, courseCodeParameter, levelCodeParameter, matricNoParameter, accountCodeParameter, entryModeParameter, studyModeParameter, sessionCodeParameter, admittedOnParameter, awardCodeParameter, createdOnParameter, createdByParameter, modifiedOnParameter, modifiedByParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="matricNo">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        public ObjectResult<Student> SPStudentsSelect(Nullable<global::System.Int64> code, global::System.String universityCode, global::System.String matricNo, Nullable<global::System.Boolean> deleted)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter matricNoParameter;
            if (matricNo != null)
            {
                matricNoParameter = new ObjectParameter("MatricNo", matricNo);
            }
            else
            {
                matricNoParameter = new ObjectParameter("MatricNo", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Student>("SPStudentsSelect", codeParameter, universityCodeParameter, matricNoParameter, deletedParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="matricNo">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        public ObjectResult<Student> SPStudentsSelect(Nullable<global::System.Int64> code, global::System.String universityCode, global::System.String matricNo, Nullable<global::System.Boolean> deleted, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter matricNoParameter;
            if (matricNo != null)
            {
                matricNoParameter = new ObjectParameter("MatricNo", matricNo);
            }
            else
            {
                matricNoParameter = new ObjectParameter("MatricNo", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Student>("SPStudentsSelect", mergeOption, codeParameter, universityCodeParameter, matricNoParameter, deletedParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Ticket> SPTicketsDelete(Nullable<global::System.Decimal> code, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Decimal));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Ticket>("SPTicketsDelete", codeParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Ticket> SPTicketsDelete(Nullable<global::System.Decimal> code, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Decimal));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Ticket>("SPTicketsDelete", mergeOption, codeParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        public ObjectResult<Ticket> SPTicketsDeletePermanently(Nullable<global::System.Decimal> code)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Decimal));
            }
    
            return base.ExecuteFunction<Ticket>("SPTicketsDeletePermanently", codeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        public ObjectResult<Ticket> SPTicketsDeletePermanently(Nullable<global::System.Decimal> code, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Decimal));
            }
    
            return base.ExecuteFunction<Ticket>("SPTicketsDeletePermanently", mergeOption, codeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="screenCode">No Metadata Documentation available.</param>
        /// <param name="sessionCode">No Metadata Documentation available.</param>
        /// <param name="semesterCode">No Metadata Documentation available.</param>
        /// <param name="pinCode">No Metadata Documentation available.</param>
        /// <param name="dateX">No Metadata Documentation available.</param>
        /// <param name="statusCode">No Metadata Documentation available.</param>
        /// <param name="noOfUse">No Metadata Documentation available.</param>
        /// <param name="maxNoUse">No Metadata Documentation available.</param>
        /// <param name="expiryDate">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Ticket> SPTicketsInsertUpdate(Nullable<global::System.Decimal> code, global::System.String universityCode, global::System.String screenCode, Nullable<global::System.Int64> sessionCode, global::System.String semesterCode, Nullable<global::System.Decimal> pinCode, Nullable<global::System.DateTime> dateX, global::System.String statusCode, Nullable<global::System.Int32> noOfUse, Nullable<global::System.Int32> maxNoUse, Nullable<global::System.DateTime> expiryDate, Nullable<global::System.DateTime> createdOn, global::System.String createdBy, Nullable<global::System.DateTime> modifiedOn, global::System.String modifiedBy, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Decimal));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter screenCodeParameter;
            if (screenCode != null)
            {
                screenCodeParameter = new ObjectParameter("ScreenCode", screenCode);
            }
            else
            {
                screenCodeParameter = new ObjectParameter("ScreenCode", typeof(global::System.String));
            }
    
            ObjectParameter sessionCodeParameter;
            if (sessionCode.HasValue)
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", sessionCode);
            }
            else
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", typeof(global::System.Int64));
            }
    
            ObjectParameter semesterCodeParameter;
            if (semesterCode != null)
            {
                semesterCodeParameter = new ObjectParameter("SemesterCode", semesterCode);
            }
            else
            {
                semesterCodeParameter = new ObjectParameter("SemesterCode", typeof(global::System.String));
            }
    
            ObjectParameter pinCodeParameter;
            if (pinCode.HasValue)
            {
                pinCodeParameter = new ObjectParameter("PinCode", pinCode);
            }
            else
            {
                pinCodeParameter = new ObjectParameter("PinCode", typeof(global::System.Decimal));
            }
    
            ObjectParameter dateXParameter;
            if (dateX.HasValue)
            {
                dateXParameter = new ObjectParameter("DateX", dateX);
            }
            else
            {
                dateXParameter = new ObjectParameter("DateX", typeof(global::System.DateTime));
            }
    
            ObjectParameter statusCodeParameter;
            if (statusCode != null)
            {
                statusCodeParameter = new ObjectParameter("StatusCode", statusCode);
            }
            else
            {
                statusCodeParameter = new ObjectParameter("StatusCode", typeof(global::System.String));
            }
    
            ObjectParameter noOfUseParameter;
            if (noOfUse.HasValue)
            {
                noOfUseParameter = new ObjectParameter("NoOfUse", noOfUse);
            }
            else
            {
                noOfUseParameter = new ObjectParameter("NoOfUse", typeof(global::System.Int32));
            }
    
            ObjectParameter maxNoUseParameter;
            if (maxNoUse.HasValue)
            {
                maxNoUseParameter = new ObjectParameter("MaxNoUse", maxNoUse);
            }
            else
            {
                maxNoUseParameter = new ObjectParameter("MaxNoUse", typeof(global::System.Int32));
            }
    
            ObjectParameter expiryDateParameter;
            if (expiryDate.HasValue)
            {
                expiryDateParameter = new ObjectParameter("ExpiryDate", expiryDate);
            }
            else
            {
                expiryDateParameter = new ObjectParameter("ExpiryDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("CreatedOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("CreatedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("CreatedBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("CreatedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Ticket>("SPTicketsInsertUpdate", codeParameter, universityCodeParameter, screenCodeParameter, sessionCodeParameter, semesterCodeParameter, pinCodeParameter, dateXParameter, statusCodeParameter, noOfUseParameter, maxNoUseParameter, expiryDateParameter, createdOnParameter, createdByParameter, modifiedOnParameter, modifiedByParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="screenCode">No Metadata Documentation available.</param>
        /// <param name="sessionCode">No Metadata Documentation available.</param>
        /// <param name="semesterCode">No Metadata Documentation available.</param>
        /// <param name="pinCode">No Metadata Documentation available.</param>
        /// <param name="dateX">No Metadata Documentation available.</param>
        /// <param name="statusCode">No Metadata Documentation available.</param>
        /// <param name="noOfUse">No Metadata Documentation available.</param>
        /// <param name="maxNoUse">No Metadata Documentation available.</param>
        /// <param name="expiryDate">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Ticket> SPTicketsInsertUpdate(Nullable<global::System.Decimal> code, global::System.String universityCode, global::System.String screenCode, Nullable<global::System.Int64> sessionCode, global::System.String semesterCode, Nullable<global::System.Decimal> pinCode, Nullable<global::System.DateTime> dateX, global::System.String statusCode, Nullable<global::System.Int32> noOfUse, Nullable<global::System.Int32> maxNoUse, Nullable<global::System.DateTime> expiryDate, Nullable<global::System.DateTime> createdOn, global::System.String createdBy, Nullable<global::System.DateTime> modifiedOn, global::System.String modifiedBy, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Decimal));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter screenCodeParameter;
            if (screenCode != null)
            {
                screenCodeParameter = new ObjectParameter("ScreenCode", screenCode);
            }
            else
            {
                screenCodeParameter = new ObjectParameter("ScreenCode", typeof(global::System.String));
            }
    
            ObjectParameter sessionCodeParameter;
            if (sessionCode.HasValue)
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", sessionCode);
            }
            else
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", typeof(global::System.Int64));
            }
    
            ObjectParameter semesterCodeParameter;
            if (semesterCode != null)
            {
                semesterCodeParameter = new ObjectParameter("SemesterCode", semesterCode);
            }
            else
            {
                semesterCodeParameter = new ObjectParameter("SemesterCode", typeof(global::System.String));
            }
    
            ObjectParameter pinCodeParameter;
            if (pinCode.HasValue)
            {
                pinCodeParameter = new ObjectParameter("PinCode", pinCode);
            }
            else
            {
                pinCodeParameter = new ObjectParameter("PinCode", typeof(global::System.Decimal));
            }
    
            ObjectParameter dateXParameter;
            if (dateX.HasValue)
            {
                dateXParameter = new ObjectParameter("DateX", dateX);
            }
            else
            {
                dateXParameter = new ObjectParameter("DateX", typeof(global::System.DateTime));
            }
    
            ObjectParameter statusCodeParameter;
            if (statusCode != null)
            {
                statusCodeParameter = new ObjectParameter("StatusCode", statusCode);
            }
            else
            {
                statusCodeParameter = new ObjectParameter("StatusCode", typeof(global::System.String));
            }
    
            ObjectParameter noOfUseParameter;
            if (noOfUse.HasValue)
            {
                noOfUseParameter = new ObjectParameter("NoOfUse", noOfUse);
            }
            else
            {
                noOfUseParameter = new ObjectParameter("NoOfUse", typeof(global::System.Int32));
            }
    
            ObjectParameter maxNoUseParameter;
            if (maxNoUse.HasValue)
            {
                maxNoUseParameter = new ObjectParameter("MaxNoUse", maxNoUse);
            }
            else
            {
                maxNoUseParameter = new ObjectParameter("MaxNoUse", typeof(global::System.Int32));
            }
    
            ObjectParameter expiryDateParameter;
            if (expiryDate.HasValue)
            {
                expiryDateParameter = new ObjectParameter("ExpiryDate", expiryDate);
            }
            else
            {
                expiryDateParameter = new ObjectParameter("ExpiryDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("CreatedOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("CreatedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("CreatedBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("CreatedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Ticket>("SPTicketsInsertUpdate", mergeOption, codeParameter, universityCodeParameter, screenCodeParameter, sessionCodeParameter, semesterCodeParameter, pinCodeParameter, dateXParameter, statusCodeParameter, noOfUseParameter, maxNoUseParameter, expiryDateParameter, createdOnParameter, createdByParameter, modifiedOnParameter, modifiedByParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="pinCode">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        public ObjectResult<Ticket> SPTicketsSelect(Nullable<global::System.Decimal> code, global::System.String universityCode, Nullable<global::System.Decimal> pinCode, Nullable<global::System.Boolean> deleted)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Decimal));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter pinCodeParameter;
            if (pinCode.HasValue)
            {
                pinCodeParameter = new ObjectParameter("PinCode", pinCode);
            }
            else
            {
                pinCodeParameter = new ObjectParameter("PinCode", typeof(global::System.Decimal));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Ticket>("SPTicketsSelect", codeParameter, universityCodeParameter, pinCodeParameter, deletedParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="pinCode">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        public ObjectResult<Ticket> SPTicketsSelect(Nullable<global::System.Decimal> code, global::System.String universityCode, Nullable<global::System.Decimal> pinCode, Nullable<global::System.Boolean> deleted, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Decimal));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter pinCodeParameter;
            if (pinCode.HasValue)
            {
                pinCodeParameter = new ObjectParameter("PinCode", pinCode);
            }
            else
            {
                pinCodeParameter = new ObjectParameter("PinCode", typeof(global::System.Decimal));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Ticket>("SPTicketsSelect", mergeOption, codeParameter, universityCodeParameter, pinCodeParameter, deletedParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Registry", Name="Admission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Admission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Admission object.
        /// </summary>
        /// <param name="code">Initial value of the Code property.</param>
        public static Admission CreateAdmission(global::System.Int64 code)
        {
            Admission admission = new Admission();
            admission.Code = code;
            return admission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Code
        {
            get
            {
                return _Code;
            }
            set
            {
                if (_Code != value)
                {
                    OnCodeChanging(value);
                    ReportPropertyChanging("Code");
                    _Code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Code");
                    OnCodeChanged();
                }
            }
        }
        private global::System.Int64 _Code;
        partial void OnCodeChanging(global::System.Int64 value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UniversityCode
        {
            get
            {
                return _UniversityCode;
            }
            set
            {
                OnUniversityCodeChanging(value);
                ReportPropertyChanging("UniversityCode");
                _UniversityCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UniversityCode");
                OnUniversityCodeChanged();
            }
        }
        private global::System.String _UniversityCode;
        partial void OnUniversityCodeChanging(global::System.String value);
        partial void OnUniversityCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountCode
        {
            get
            {
                return _AccountCode;
            }
            set
            {
                OnAccountCodeChanging(value);
                ReportPropertyChanging("AccountCode");
                _AccountCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountCode");
                OnAccountCodeChanged();
            }
        }
        private global::System.String _AccountCode;
        partial void OnAccountCodeChanging(global::System.String value);
        partial void OnAccountCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> FacultyCode
        {
            get
            {
                return _FacultyCode;
            }
            set
            {
                OnFacultyCodeChanging(value);
                ReportPropertyChanging("FacultyCode");
                _FacultyCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyCode");
                OnFacultyCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _FacultyCode;
        partial void OnFacultyCodeChanging(Nullable<global::System.Int64> value);
        partial void OnFacultyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DepartmentCode
        {
            get
            {
                return _DepartmentCode;
            }
            set
            {
                OnDepartmentCodeChanging(value);
                ReportPropertyChanging("DepartmentCode");
                _DepartmentCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentCode");
                OnDepartmentCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _DepartmentCode;
        partial void OnDepartmentCodeChanging(Nullable<global::System.Int64> value);
        partial void OnDepartmentCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CourseCode
        {
            get
            {
                return _CourseCode;
            }
            set
            {
                OnCourseCodeChanging(value);
                ReportPropertyChanging("CourseCode");
                _CourseCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseCode");
                OnCourseCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _CourseCode;
        partial void OnCourseCodeChanging(Nullable<global::System.Int64> value);
        partial void OnCourseCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ProgramCode
        {
            get
            {
                return _ProgramCode;
            }
            set
            {
                OnProgramCodeChanging(value);
                ReportPropertyChanging("ProgramCode");
                _ProgramCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProgramCode");
                OnProgramCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _ProgramCode;
        partial void OnProgramCodeChanging(Nullable<global::System.Int64> value);
        partial void OnProgramCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AwardCode
        {
            get
            {
                return _AwardCode;
            }
            set
            {
                OnAwardCodeChanging(value);
                ReportPropertyChanging("AwardCode");
                _AwardCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AwardCode");
                OnAwardCodeChanged();
            }
        }
        private global::System.String _AwardCode;
        partial void OnAwardCodeChanging(global::System.String value);
        partial void OnAwardCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelCode
        {
            get
            {
                return _LevelCode;
            }
            set
            {
                OnLevelCodeChanging(value);
                ReportPropertyChanging("LevelCode");
                _LevelCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelCode");
                OnLevelCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelCode;
        partial void OnLevelCodeChanging(Nullable<global::System.Int32> value);
        partial void OnLevelCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntryMode
        {
            get
            {
                return _EntryMode;
            }
            set
            {
                OnEntryModeChanging(value);
                ReportPropertyChanging("EntryMode");
                _EntryMode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntryMode");
                OnEntryModeChanged();
            }
        }
        private global::System.String _EntryMode;
        partial void OnEntryModeChanging(global::System.String value);
        partial void OnEntryModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudyMode
        {
            get
            {
                return _StudyMode;
            }
            set
            {
                OnStudyModeChanging(value);
                ReportPropertyChanging("StudyMode");
                _StudyMode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudyMode");
                OnStudyModeChanged();
            }
        }
        private global::System.String _StudyMode;
        partial void OnStudyModeChanging(global::System.String value);
        partial void OnStudyModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SessionCode
        {
            get
            {
                return _SessionCode;
            }
            set
            {
                OnSessionCodeChanging(value);
                ReportPropertyChanging("SessionCode");
                _SessionCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionCode");
                OnSessionCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _SessionCode;
        partial void OnSessionCodeChanging(Nullable<global::System.Int64> value);
        partial void OnSessionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Int32> _Score;
        partial void OnScoreChanging(Nullable<global::System.Int32> value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JambScore
        {
            get
            {
                return _JambScore;
            }
            set
            {
                OnJambScoreChanging(value);
                ReportPropertyChanging("JambScore");
                _JambScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JambScore");
                OnJambScoreChanged();
            }
        }
        private Nullable<global::System.Int32> _JambScore;
        partial void OnJambScoreChanging(Nullable<global::System.Int32> value);
        partial void OnJambScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CutOffMax
        {
            get
            {
                return _CutOffMax;
            }
            set
            {
                OnCutOffMaxChanging(value);
                ReportPropertyChanging("CutOffMax");
                _CutOffMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CutOffMax");
                OnCutOffMaxChanged();
            }
        }
        private Nullable<global::System.Int32> _CutOffMax;
        partial void OnCutOffMaxChanging(Nullable<global::System.Int32> value);
        partial void OnCutOffMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdmissionStatus
        {
            get
            {
                return _AdmissionStatus;
            }
            set
            {
                OnAdmissionStatusChanging(value);
                ReportPropertyChanging("AdmissionStatus");
                _AdmissionStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdmissionStatus");
                OnAdmissionStatusChanged();
            }
        }
        private global::System.String _AdmissionStatus;
        partial void OnAdmissionStatusChanging(global::System.String value);
        partial void OnAdmissionStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusReason
        {
            get
            {
                return _StatusReason;
            }
            set
            {
                OnStatusReasonChanging(value);
                ReportPropertyChanging("StatusReason");
                _StatusReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StatusReason");
                OnStatusReasonChanged();
            }
        }
        private global::System.String _StatusReason;
        partial void OnStatusReasonChanging(global::System.String value);
        partial void OnStatusReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalScore
        {
            get
            {
                return _TotalScore;
            }
            set
            {
                OnTotalScoreChanging(value);
                ReportPropertyChanging("TotalScore");
                _TotalScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalScore");
                OnTotalScoreChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalScore;
        partial void OnTotalScoreChanging(Nullable<global::System.Int32> value);
        partial void OnTotalScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private global::System.String _DeletedBy;
        partial void OnDeletedByChanging(global::System.String value);
        partial void OnDeletedByChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Registry", Name="Exam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Exam : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Exam object.
        /// </summary>
        /// <param name="code">Initial value of the Code property.</param>
        public static Exam CreateExam(global::System.Int64 code)
        {
            Exam exam = new Exam();
            exam.Code = code;
            return exam;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Code
        {
            get
            {
                return _Code;
            }
            set
            {
                if (_Code != value)
                {
                    OnCodeChanging(value);
                    ReportPropertyChanging("Code");
                    _Code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Code");
                    OnCodeChanged();
                }
            }
        }
        private global::System.Int64 _Code;
        partial void OnCodeChanging(global::System.Int64 value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UniversityCode
        {
            get
            {
                return _UniversityCode;
            }
            set
            {
                OnUniversityCodeChanging(value);
                ReportPropertyChanging("UniversityCode");
                _UniversityCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UniversityCode");
                OnUniversityCodeChanged();
            }
        }
        private global::System.String _UniversityCode;
        partial void OnUniversityCodeChanging(global::System.String value);
        partial void OnUniversityCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeCode
        {
            get
            {
                return _TypeCode;
            }
            set
            {
                OnTypeCodeChanging(value);
                ReportPropertyChanging("TypeCode");
                _TypeCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeCode");
                OnTypeCodeChanged();
            }
        }
        private global::System.String _TypeCode;
        partial void OnTypeCodeChanging(global::System.String value);
        partial void OnTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountCode
        {
            get
            {
                return _AccountCode;
            }
            set
            {
                OnAccountCodeChanging(value);
                ReportPropertyChanging("AccountCode");
                _AccountCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountCode");
                OnAccountCodeChanged();
            }
        }
        private global::System.String _AccountCode;
        partial void OnAccountCodeChanging(global::System.String value);
        partial void OnAccountCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> FacultyCode
        {
            get
            {
                return _FacultyCode;
            }
            set
            {
                OnFacultyCodeChanging(value);
                ReportPropertyChanging("FacultyCode");
                _FacultyCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyCode");
                OnFacultyCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _FacultyCode;
        partial void OnFacultyCodeChanging(Nullable<global::System.Int64> value);
        partial void OnFacultyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DepartmentCode
        {
            get
            {
                return _DepartmentCode;
            }
            set
            {
                OnDepartmentCodeChanging(value);
                ReportPropertyChanging("DepartmentCode");
                _DepartmentCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentCode");
                OnDepartmentCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _DepartmentCode;
        partial void OnDepartmentCodeChanging(Nullable<global::System.Int64> value);
        partial void OnDepartmentCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CourseCode
        {
            get
            {
                return _CourseCode;
            }
            set
            {
                OnCourseCodeChanging(value);
                ReportPropertyChanging("CourseCode");
                _CourseCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseCode");
                OnCourseCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _CourseCode;
        partial void OnCourseCodeChanging(Nullable<global::System.Int64> value);
        partial void OnCourseCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ProgramCode
        {
            get
            {
                return _ProgramCode;
            }
            set
            {
                OnProgramCodeChanging(value);
                ReportPropertyChanging("ProgramCode");
                _ProgramCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProgramCode");
                OnProgramCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _ProgramCode;
        partial void OnProgramCodeChanging(Nullable<global::System.Int64> value);
        partial void OnProgramCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AwardCode
        {
            get
            {
                return _AwardCode;
            }
            set
            {
                OnAwardCodeChanging(value);
                ReportPropertyChanging("AwardCode");
                _AwardCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AwardCode");
                OnAwardCodeChanged();
            }
        }
        private global::System.String _AwardCode;
        partial void OnAwardCodeChanging(global::System.String value);
        partial void OnAwardCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntryMode
        {
            get
            {
                return _EntryMode;
            }
            set
            {
                OnEntryModeChanging(value);
                ReportPropertyChanging("EntryMode");
                _EntryMode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntryMode");
                OnEntryModeChanged();
            }
        }
        private global::System.String _EntryMode;
        partial void OnEntryModeChanging(global::System.String value);
        partial void OnEntryModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudyMode
        {
            get
            {
                return _StudyMode;
            }
            set
            {
                OnStudyModeChanging(value);
                ReportPropertyChanging("StudyMode");
                _StudyMode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudyMode");
                OnStudyModeChanged();
            }
        }
        private global::System.String _StudyMode;
        partial void OnStudyModeChanging(global::System.String value);
        partial void OnStudyModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelCode
        {
            get
            {
                return _LevelCode;
            }
            set
            {
                OnLevelCodeChanging(value);
                ReportPropertyChanging("LevelCode");
                _LevelCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelCode");
                OnLevelCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelCode;
        partial void OnLevelCodeChanging(Nullable<global::System.Int32> value);
        partial void OnLevelCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateApplied
        {
            get
            {
                return _DateApplied;
            }
            set
            {
                OnDateAppliedChanging(value);
                ReportPropertyChanging("DateApplied");
                _DateApplied = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateApplied");
                OnDateAppliedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateApplied;
        partial void OnDateAppliedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAppliedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SessionCode
        {
            get
            {
                return _SessionCode;
            }
            set
            {
                OnSessionCodeChanging(value);
                ReportPropertyChanging("SessionCode");
                _SessionCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionCode");
                OnSessionCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _SessionCode;
        partial void OnSessionCodeChanging(Nullable<global::System.Int64> value);
        partial void OnSessionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfSitting
        {
            get
            {
                return _NoOfSitting;
            }
            set
            {
                OnNoOfSittingChanging(value);
                ReportPropertyChanging("NoOfSitting");
                _NoOfSitting = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfSitting");
                OnNoOfSittingChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfSitting;
        partial void OnNoOfSittingChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfSittingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfCredits
        {
            get
            {
                return _NoOfCredits;
            }
            set
            {
                OnNoOfCreditsChanging(value);
                ReportPropertyChanging("NoOfCredits");
                _NoOfCredits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfCredits");
                OnNoOfCreditsChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfCredits;
        partial void OnNoOfCreditsChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfCreditsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfPasses
        {
            get
            {
                return _NoOfPasses;
            }
            set
            {
                OnNoOfPassesChanging(value);
                ReportPropertyChanging("NoOfPasses");
                _NoOfPasses = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfPasses");
                OnNoOfPassesChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfPasses;
        partial void OnNoOfPassesChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfPassesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfDistinctions
        {
            get
            {
                return _NoOfDistinctions;
            }
            set
            {
                OnNoOfDistinctionsChanging(value);
                ReportPropertyChanging("NoOfDistinctions");
                _NoOfDistinctions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfDistinctions");
                OnNoOfDistinctionsChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfDistinctions;
        partial void OnNoOfDistinctionsChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfDistinctionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfFails
        {
            get
            {
                return _NoOfFails;
            }
            set
            {
                OnNoOfFailsChanging(value);
                ReportPropertyChanging("NoOfFails");
                _NoOfFails = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfFails");
                OnNoOfFailsChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfFails;
        partial void OnNoOfFailsChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfFailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private Nullable<global::System.Int32> _Total;
        partial void OnTotalChanging(Nullable<global::System.Int32> value);
        partial void OnTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private global::System.String _DeletedBy;
        partial void OnDeletedByChanging(global::System.String value);
        partial void OnDeletedByChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Registry", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Student object.
        /// </summary>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="matricNo">Initial value of the MatricNo property.</param>
        public static Student CreateStudent(global::System.Int64 code, global::System.String matricNo)
        {
            Student student = new Student();
            student.Code = code;
            student.MatricNo = matricNo;
            return student;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Code
        {
            get
            {
                return _Code;
            }
            set
            {
                if (_Code != value)
                {
                    OnCodeChanging(value);
                    ReportPropertyChanging("Code");
                    _Code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Code");
                    OnCodeChanged();
                }
            }
        }
        private global::System.Int64 _Code;
        partial void OnCodeChanging(global::System.Int64 value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UniversityCode
        {
            get
            {
                return _UniversityCode;
            }
            set
            {
                OnUniversityCodeChanging(value);
                ReportPropertyChanging("UniversityCode");
                _UniversityCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UniversityCode");
                OnUniversityCodeChanged();
            }
        }
        private global::System.String _UniversityCode;
        partial void OnUniversityCodeChanging(global::System.String value);
        partial void OnUniversityCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> FacultyCode
        {
            get
            {
                return _FacultyCode;
            }
            set
            {
                OnFacultyCodeChanging(value);
                ReportPropertyChanging("FacultyCode");
                _FacultyCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyCode");
                OnFacultyCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _FacultyCode;
        partial void OnFacultyCodeChanging(Nullable<global::System.Int64> value);
        partial void OnFacultyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DepartmentCode
        {
            get
            {
                return _DepartmentCode;
            }
            set
            {
                OnDepartmentCodeChanging(value);
                ReportPropertyChanging("DepartmentCode");
                _DepartmentCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentCode");
                OnDepartmentCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _DepartmentCode;
        partial void OnDepartmentCodeChanging(Nullable<global::System.Int64> value);
        partial void OnDepartmentCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ProgramCode
        {
            get
            {
                return _ProgramCode;
            }
            set
            {
                OnProgramCodeChanging(value);
                ReportPropertyChanging("ProgramCode");
                _ProgramCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProgramCode");
                OnProgramCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _ProgramCode;
        partial void OnProgramCodeChanging(Nullable<global::System.Int64> value);
        partial void OnProgramCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CourseCode
        {
            get
            {
                return _CourseCode;
            }
            set
            {
                OnCourseCodeChanging(value);
                ReportPropertyChanging("CourseCode");
                _CourseCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseCode");
                OnCourseCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _CourseCode;
        partial void OnCourseCodeChanging(Nullable<global::System.Int64> value);
        partial void OnCourseCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelCode
        {
            get
            {
                return _LevelCode;
            }
            set
            {
                OnLevelCodeChanging(value);
                ReportPropertyChanging("LevelCode");
                _LevelCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelCode");
                OnLevelCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelCode;
        partial void OnLevelCodeChanging(Nullable<global::System.Int32> value);
        partial void OnLevelCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MatricNo
        {
            get
            {
                return _MatricNo;
            }
            set
            {
                if (_MatricNo != value)
                {
                    OnMatricNoChanging(value);
                    ReportPropertyChanging("MatricNo");
                    _MatricNo = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MatricNo");
                    OnMatricNoChanged();
                }
            }
        }
        private global::System.String _MatricNo;
        partial void OnMatricNoChanging(global::System.String value);
        partial void OnMatricNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountCode
        {
            get
            {
                return _AccountCode;
            }
            set
            {
                OnAccountCodeChanging(value);
                ReportPropertyChanging("AccountCode");
                _AccountCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountCode");
                OnAccountCodeChanged();
            }
        }
        private global::System.String _AccountCode;
        partial void OnAccountCodeChanging(global::System.String value);
        partial void OnAccountCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EntryMode
        {
            get
            {
                return _EntryMode;
            }
            set
            {
                OnEntryModeChanging(value);
                ReportPropertyChanging("EntryMode");
                _EntryMode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EntryMode");
                OnEntryModeChanged();
            }
        }
        private global::System.String _EntryMode;
        partial void OnEntryModeChanging(global::System.String value);
        partial void OnEntryModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudyMode
        {
            get
            {
                return _StudyMode;
            }
            set
            {
                OnStudyModeChanging(value);
                ReportPropertyChanging("StudyMode");
                _StudyMode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StudyMode");
                OnStudyModeChanged();
            }
        }
        private global::System.String _StudyMode;
        partial void OnStudyModeChanging(global::System.String value);
        partial void OnStudyModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SessionCode
        {
            get
            {
                return _SessionCode;
            }
            set
            {
                OnSessionCodeChanging(value);
                ReportPropertyChanging("SessionCode");
                _SessionCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionCode");
                OnSessionCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _SessionCode;
        partial void OnSessionCodeChanging(Nullable<global::System.Int64> value);
        partial void OnSessionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AdmittedOn
        {
            get
            {
                return _AdmittedOn;
            }
            set
            {
                OnAdmittedOnChanging(value);
                ReportPropertyChanging("AdmittedOn");
                _AdmittedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmittedOn");
                OnAdmittedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _AdmittedOn;
        partial void OnAdmittedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnAdmittedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AwardCode
        {
            get
            {
                return _AwardCode;
            }
            set
            {
                OnAwardCodeChanging(value);
                ReportPropertyChanging("AwardCode");
                _AwardCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AwardCode");
                OnAwardCodeChanged();
            }
        }
        private global::System.String _AwardCode;
        partial void OnAwardCodeChanging(global::System.String value);
        partial void OnAwardCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private global::System.String _DeletedBy;
        partial void OnDeletedByChanging(global::System.String value);
        partial void OnDeletedByChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Registry", Name="Ticket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ticket : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ticket object.
        /// </summary>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="pinCode">Initial value of the PinCode property.</param>
        public static Ticket CreateTicket(global::System.Decimal code, global::System.Decimal pinCode)
        {
            Ticket ticket = new Ticket();
            ticket.Code = code;
            ticket.PinCode = pinCode;
            return ticket;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Code
        {
            get
            {
                return _Code;
            }
            set
            {
                if (_Code != value)
                {
                    OnCodeChanging(value);
                    ReportPropertyChanging("Code");
                    _Code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Code");
                    OnCodeChanged();
                }
            }
        }
        private global::System.Decimal _Code;
        partial void OnCodeChanging(global::System.Decimal value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UniversityCode
        {
            get
            {
                return _UniversityCode;
            }
            set
            {
                OnUniversityCodeChanging(value);
                ReportPropertyChanging("UniversityCode");
                _UniversityCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UniversityCode");
                OnUniversityCodeChanged();
            }
        }
        private global::System.String _UniversityCode;
        partial void OnUniversityCodeChanging(global::System.String value);
        partial void OnUniversityCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScreenCode
        {
            get
            {
                return _ScreenCode;
            }
            set
            {
                OnScreenCodeChanging(value);
                ReportPropertyChanging("ScreenCode");
                _ScreenCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ScreenCode");
                OnScreenCodeChanged();
            }
        }
        private global::System.String _ScreenCode;
        partial void OnScreenCodeChanging(global::System.String value);
        partial void OnScreenCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SessionCode
        {
            get
            {
                return _SessionCode;
            }
            set
            {
                OnSessionCodeChanging(value);
                ReportPropertyChanging("SessionCode");
                _SessionCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionCode");
                OnSessionCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _SessionCode;
        partial void OnSessionCodeChanging(Nullable<global::System.Int64> value);
        partial void OnSessionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SemesterCode
        {
            get
            {
                return _SemesterCode;
            }
            set
            {
                OnSemesterCodeChanging(value);
                ReportPropertyChanging("SemesterCode");
                _SemesterCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SemesterCode");
                OnSemesterCodeChanged();
            }
        }
        private global::System.String _SemesterCode;
        partial void OnSemesterCodeChanging(global::System.String value);
        partial void OnSemesterCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PinCode
        {
            get
            {
                return _PinCode;
            }
            set
            {
                if (_PinCode != value)
                {
                    OnPinCodeChanging(value);
                    ReportPropertyChanging("PinCode");
                    _PinCode = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PinCode");
                    OnPinCodeChanged();
                }
            }
        }
        private global::System.Decimal _PinCode;
        partial void OnPinCodeChanging(global::System.Decimal value);
        partial void OnPinCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateX
        {
            get
            {
                return _DateX;
            }
            set
            {
                OnDateXChanging(value);
                ReportPropertyChanging("DateX");
                _DateX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateX");
                OnDateXChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateX;
        partial void OnDateXChanging(Nullable<global::System.DateTime> value);
        partial void OnDateXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusCode
        {
            get
            {
                return _StatusCode;
            }
            set
            {
                OnStatusCodeChanging(value);
                ReportPropertyChanging("StatusCode");
                _StatusCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StatusCode");
                OnStatusCodeChanged();
            }
        }
        private global::System.String _StatusCode;
        partial void OnStatusCodeChanging(global::System.String value);
        partial void OnStatusCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfUse
        {
            get
            {
                return _NoOfUse;
            }
            set
            {
                OnNoOfUseChanging(value);
                ReportPropertyChanging("NoOfUse");
                _NoOfUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfUse");
                OnNoOfUseChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfUse;
        partial void OnNoOfUseChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfUseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxNoUse
        {
            get
            {
                return _MaxNoUse;
            }
            set
            {
                OnMaxNoUseChanging(value);
                ReportPropertyChanging("MaxNoUse");
                _MaxNoUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxNoUse");
                OnMaxNoUseChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxNoUse;
        partial void OnMaxNoUseChanging(Nullable<global::System.Int32> value);
        partial void OnMaxNoUseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpiryDate
        {
            get
            {
                return _ExpiryDate;
            }
            set
            {
                OnExpiryDateChanging(value);
                ReportPropertyChanging("ExpiryDate");
                _ExpiryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpiryDate");
                OnExpiryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpiryDate;
        partial void OnExpiryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpiryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private global::System.String _DeletedBy;
        partial void OnDeletedByChanging(global::System.String value);
        partial void OnDeletedByChanged();

        #endregion
    
    }

    #endregion
    
}
