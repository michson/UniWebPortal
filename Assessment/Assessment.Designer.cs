//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Assessment
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AssessmentEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AssessmentEntities object using the connection string found in the 'AssessmentEntities' section of the application configuration file.
        /// </summary>
        public AssessmentEntities() : base("name=AssessmentEntities", "AssessmentEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AssessmentEntities object.
        /// </summary>
        public AssessmentEntities(string connectionString) : base(connectionString, "AssessmentEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AssessmentEntities object.
        /// </summary>
        public AssessmentEntities(EntityConnection connection) : base(connection, "AssessmentEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attendance> Attendances
        {
            get
            {
                if ((_Attendances == null))
                {
                    _Attendances = base.CreateObjectSet<Attendance>("Attendances");
                }
                return _Attendances;
            }
        }
        private ObjectSet<Attendance> _Attendances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Definition> Definitions
        {
            get
            {
                if ((_Definitions == null))
                {
                    _Definitions = base.CreateObjectSet<Definition>("Definitions");
                }
                return _Definitions;
            }
        }
        private ObjectSet<Definition> _Definitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Record> Records
        {
            get
            {
                if ((_Records == null))
                {
                    _Records = base.CreateObjectSet<Record>("Records");
                }
                return _Records;
            }
        }
        private ObjectSet<Record> _Records;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attendances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttendances(Attendance attendance)
        {
            base.AddObject("Attendances", attendance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Definitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDefinitions(Definition definition)
        {
            base.AddObject("Definitions", definition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Records EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRecords(Record record)
        {
            base.AddObject("Records", record);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Attendance> SPAttendanceDelete(Nullable<global::System.Int64> code, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Attendance>("SPAttendanceDelete", codeParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Attendance> SPAttendanceDelete(Nullable<global::System.Int64> code, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Attendance>("SPAttendanceDelete", mergeOption, codeParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        public ObjectResult<Attendance> SPAttendanceDeletePermanently(Nullable<global::System.Int64> code)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<Attendance>("SPAttendanceDeletePermanently", codeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        public ObjectResult<Attendance> SPAttendanceDeletePermanently(Nullable<global::System.Int64> code, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<Attendance>("SPAttendanceDeletePermanently", mergeOption, codeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="facultyCode">No Metadata Documentation available.</param>
        /// <param name="departmentCode">No Metadata Documentation available.</param>
        /// <param name="courseCode">No Metadata Documentation available.</param>
        /// <param name="programCode">No Metadata Documentation available.</param>
        /// <param name="levelCode">No Metadata Documentation available.</param>
        /// <param name="studentCode">No Metadata Documentation available.</param>
        /// <param name="matricNo">No Metadata Documentation available.</param>
        /// <param name="sessionCode">No Metadata Documentation available.</param>
        /// <param name="semesterCode">No Metadata Documentation available.</param>
        /// <param name="attendanceStatus">No Metadata Documentation available.</param>
        /// <param name="staffCode">No Metadata Documentation available.</param>
        /// <param name="subCourseCode">No Metadata Documentation available.</param>
        /// <param name="attendanceType">No Metadata Documentation available.</param>
        /// <param name="remark">No Metadata Documentation available.</param>
        /// <param name="screenCode">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Attendance> SPAttendanceInsertUpdate(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Int64> facultyCode, Nullable<global::System.Int64> departmentCode, Nullable<global::System.Int64> courseCode, Nullable<global::System.Int64> programCode, Nullable<global::System.Int32> levelCode, Nullable<global::System.Int64> studentCode, global::System.String matricNo, Nullable<global::System.Int64> sessionCode, Nullable<global::System.Int64> semesterCode, global::System.String attendanceStatus, global::System.String staffCode, Nullable<global::System.Int64> subCourseCode, global::System.String attendanceType, global::System.String remark, global::System.String screenCode, Nullable<global::System.DateTime> createdOn, global::System.String createdBy, Nullable<global::System.DateTime> modifiedOn, global::System.String modifiedBy, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter facultyCodeParameter;
            if (facultyCode.HasValue)
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", facultyCode);
            }
            else
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", typeof(global::System.Int64));
            }
    
            ObjectParameter departmentCodeParameter;
            if (departmentCode.HasValue)
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", departmentCode);
            }
            else
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", typeof(global::System.Int64));
            }
    
            ObjectParameter courseCodeParameter;
            if (courseCode.HasValue)
            {
                courseCodeParameter = new ObjectParameter("CourseCode", courseCode);
            }
            else
            {
                courseCodeParameter = new ObjectParameter("CourseCode", typeof(global::System.Int64));
            }
    
            ObjectParameter programCodeParameter;
            if (programCode.HasValue)
            {
                programCodeParameter = new ObjectParameter("ProgramCode", programCode);
            }
            else
            {
                programCodeParameter = new ObjectParameter("ProgramCode", typeof(global::System.Int64));
            }
    
            ObjectParameter levelCodeParameter;
            if (levelCode.HasValue)
            {
                levelCodeParameter = new ObjectParameter("LevelCode", levelCode);
            }
            else
            {
                levelCodeParameter = new ObjectParameter("LevelCode", typeof(global::System.Int32));
            }
    
            ObjectParameter studentCodeParameter;
            if (studentCode.HasValue)
            {
                studentCodeParameter = new ObjectParameter("StudentCode", studentCode);
            }
            else
            {
                studentCodeParameter = new ObjectParameter("StudentCode", typeof(global::System.Int64));
            }
    
            ObjectParameter matricNoParameter;
            if (matricNo != null)
            {
                matricNoParameter = new ObjectParameter("MatricNo", matricNo);
            }
            else
            {
                matricNoParameter = new ObjectParameter("MatricNo", typeof(global::System.String));
            }
    
            ObjectParameter sessionCodeParameter;
            if (sessionCode.HasValue)
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", sessionCode);
            }
            else
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", typeof(global::System.Int64));
            }
    
            ObjectParameter semesterCodeParameter;
            if (semesterCode.HasValue)
            {
                semesterCodeParameter = new ObjectParameter("SemesterCode", semesterCode);
            }
            else
            {
                semesterCodeParameter = new ObjectParameter("SemesterCode", typeof(global::System.Int64));
            }
    
            ObjectParameter attendanceStatusParameter;
            if (attendanceStatus != null)
            {
                attendanceStatusParameter = new ObjectParameter("AttendanceStatus", attendanceStatus);
            }
            else
            {
                attendanceStatusParameter = new ObjectParameter("AttendanceStatus", typeof(global::System.String));
            }
    
            ObjectParameter staffCodeParameter;
            if (staffCode != null)
            {
                staffCodeParameter = new ObjectParameter("StaffCode", staffCode);
            }
            else
            {
                staffCodeParameter = new ObjectParameter("StaffCode", typeof(global::System.String));
            }
    
            ObjectParameter subCourseCodeParameter;
            if (subCourseCode.HasValue)
            {
                subCourseCodeParameter = new ObjectParameter("SubCourseCode", subCourseCode);
            }
            else
            {
                subCourseCodeParameter = new ObjectParameter("SubCourseCode", typeof(global::System.Int64));
            }
    
            ObjectParameter attendanceTypeParameter;
            if (attendanceType != null)
            {
                attendanceTypeParameter = new ObjectParameter("AttendanceType", attendanceType);
            }
            else
            {
                attendanceTypeParameter = new ObjectParameter("AttendanceType", typeof(global::System.String));
            }
    
            ObjectParameter remarkParameter;
            if (remark != null)
            {
                remarkParameter = new ObjectParameter("Remark", remark);
            }
            else
            {
                remarkParameter = new ObjectParameter("Remark", typeof(global::System.String));
            }
    
            ObjectParameter screenCodeParameter;
            if (screenCode != null)
            {
                screenCodeParameter = new ObjectParameter("ScreenCode", screenCode);
            }
            else
            {
                screenCodeParameter = new ObjectParameter("ScreenCode", typeof(global::System.String));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("CreatedOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("CreatedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("CreatedBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("CreatedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Attendance>("SPAttendanceInsertUpdate", codeParameter, universityCodeParameter, facultyCodeParameter, departmentCodeParameter, courseCodeParameter, programCodeParameter, levelCodeParameter, studentCodeParameter, matricNoParameter, sessionCodeParameter, semesterCodeParameter, attendanceStatusParameter, staffCodeParameter, subCourseCodeParameter, attendanceTypeParameter, remarkParameter, screenCodeParameter, createdOnParameter, createdByParameter, modifiedOnParameter, modifiedByParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="facultyCode">No Metadata Documentation available.</param>
        /// <param name="departmentCode">No Metadata Documentation available.</param>
        /// <param name="courseCode">No Metadata Documentation available.</param>
        /// <param name="programCode">No Metadata Documentation available.</param>
        /// <param name="levelCode">No Metadata Documentation available.</param>
        /// <param name="studentCode">No Metadata Documentation available.</param>
        /// <param name="matricNo">No Metadata Documentation available.</param>
        /// <param name="sessionCode">No Metadata Documentation available.</param>
        /// <param name="semesterCode">No Metadata Documentation available.</param>
        /// <param name="attendanceStatus">No Metadata Documentation available.</param>
        /// <param name="staffCode">No Metadata Documentation available.</param>
        /// <param name="subCourseCode">No Metadata Documentation available.</param>
        /// <param name="attendanceType">No Metadata Documentation available.</param>
        /// <param name="remark">No Metadata Documentation available.</param>
        /// <param name="screenCode">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Attendance> SPAttendanceInsertUpdate(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Int64> facultyCode, Nullable<global::System.Int64> departmentCode, Nullable<global::System.Int64> courseCode, Nullable<global::System.Int64> programCode, Nullable<global::System.Int32> levelCode, Nullable<global::System.Int64> studentCode, global::System.String matricNo, Nullable<global::System.Int64> sessionCode, Nullable<global::System.Int64> semesterCode, global::System.String attendanceStatus, global::System.String staffCode, Nullable<global::System.Int64> subCourseCode, global::System.String attendanceType, global::System.String remark, global::System.String screenCode, Nullable<global::System.DateTime> createdOn, global::System.String createdBy, Nullable<global::System.DateTime> modifiedOn, global::System.String modifiedBy, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter facultyCodeParameter;
            if (facultyCode.HasValue)
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", facultyCode);
            }
            else
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", typeof(global::System.Int64));
            }
    
            ObjectParameter departmentCodeParameter;
            if (departmentCode.HasValue)
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", departmentCode);
            }
            else
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", typeof(global::System.Int64));
            }
    
            ObjectParameter courseCodeParameter;
            if (courseCode.HasValue)
            {
                courseCodeParameter = new ObjectParameter("CourseCode", courseCode);
            }
            else
            {
                courseCodeParameter = new ObjectParameter("CourseCode", typeof(global::System.Int64));
            }
    
            ObjectParameter programCodeParameter;
            if (programCode.HasValue)
            {
                programCodeParameter = new ObjectParameter("ProgramCode", programCode);
            }
            else
            {
                programCodeParameter = new ObjectParameter("ProgramCode", typeof(global::System.Int64));
            }
    
            ObjectParameter levelCodeParameter;
            if (levelCode.HasValue)
            {
                levelCodeParameter = new ObjectParameter("LevelCode", levelCode);
            }
            else
            {
                levelCodeParameter = new ObjectParameter("LevelCode", typeof(global::System.Int32));
            }
    
            ObjectParameter studentCodeParameter;
            if (studentCode.HasValue)
            {
                studentCodeParameter = new ObjectParameter("StudentCode", studentCode);
            }
            else
            {
                studentCodeParameter = new ObjectParameter("StudentCode", typeof(global::System.Int64));
            }
    
            ObjectParameter matricNoParameter;
            if (matricNo != null)
            {
                matricNoParameter = new ObjectParameter("MatricNo", matricNo);
            }
            else
            {
                matricNoParameter = new ObjectParameter("MatricNo", typeof(global::System.String));
            }
    
            ObjectParameter sessionCodeParameter;
            if (sessionCode.HasValue)
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", sessionCode);
            }
            else
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", typeof(global::System.Int64));
            }
    
            ObjectParameter semesterCodeParameter;
            if (semesterCode.HasValue)
            {
                semesterCodeParameter = new ObjectParameter("SemesterCode", semesterCode);
            }
            else
            {
                semesterCodeParameter = new ObjectParameter("SemesterCode", typeof(global::System.Int64));
            }
    
            ObjectParameter attendanceStatusParameter;
            if (attendanceStatus != null)
            {
                attendanceStatusParameter = new ObjectParameter("AttendanceStatus", attendanceStatus);
            }
            else
            {
                attendanceStatusParameter = new ObjectParameter("AttendanceStatus", typeof(global::System.String));
            }
    
            ObjectParameter staffCodeParameter;
            if (staffCode != null)
            {
                staffCodeParameter = new ObjectParameter("StaffCode", staffCode);
            }
            else
            {
                staffCodeParameter = new ObjectParameter("StaffCode", typeof(global::System.String));
            }
    
            ObjectParameter subCourseCodeParameter;
            if (subCourseCode.HasValue)
            {
                subCourseCodeParameter = new ObjectParameter("SubCourseCode", subCourseCode);
            }
            else
            {
                subCourseCodeParameter = new ObjectParameter("SubCourseCode", typeof(global::System.Int64));
            }
    
            ObjectParameter attendanceTypeParameter;
            if (attendanceType != null)
            {
                attendanceTypeParameter = new ObjectParameter("AttendanceType", attendanceType);
            }
            else
            {
                attendanceTypeParameter = new ObjectParameter("AttendanceType", typeof(global::System.String));
            }
    
            ObjectParameter remarkParameter;
            if (remark != null)
            {
                remarkParameter = new ObjectParameter("Remark", remark);
            }
            else
            {
                remarkParameter = new ObjectParameter("Remark", typeof(global::System.String));
            }
    
            ObjectParameter screenCodeParameter;
            if (screenCode != null)
            {
                screenCodeParameter = new ObjectParameter("ScreenCode", screenCode);
            }
            else
            {
                screenCodeParameter = new ObjectParameter("ScreenCode", typeof(global::System.String));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("CreatedOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("CreatedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("CreatedBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("CreatedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Attendance>("SPAttendanceInsertUpdate", mergeOption, codeParameter, universityCodeParameter, facultyCodeParameter, departmentCodeParameter, courseCodeParameter, programCodeParameter, levelCodeParameter, studentCodeParameter, matricNoParameter, sessionCodeParameter, semesterCodeParameter, attendanceStatusParameter, staffCodeParameter, subCourseCodeParameter, attendanceTypeParameter, remarkParameter, screenCodeParameter, createdOnParameter, createdByParameter, modifiedOnParameter, modifiedByParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        public ObjectResult<Attendance> SPAttendanceSelect(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Boolean> deleted)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Attendance>("SPAttendanceSelect", codeParameter, universityCodeParameter, deletedParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        public ObjectResult<Attendance> SPAttendanceSelect(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Boolean> deleted, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Attendance>("SPAttendanceSelect", mergeOption, codeParameter, universityCodeParameter, deletedParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Definition> SPDefinitionDelete(Nullable<global::System.Int64> code, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Definition>("SPDefinitionDelete", codeParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Definition> SPDefinitionDelete(Nullable<global::System.Int64> code, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Definition>("SPDefinitionDelete", mergeOption, codeParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        public ObjectResult<Definition> SPDefinitionDeletePermanently(Nullable<global::System.Int64> code)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<Definition>("SPDefinitionDeletePermanently", codeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        public ObjectResult<Definition> SPDefinitionDeletePermanently(Nullable<global::System.Int64> code, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<Definition>("SPDefinitionDeletePermanently", mergeOption, codeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="facultyCode">No Metadata Documentation available.</param>
        /// <param name="departmentCode">No Metadata Documentation available.</param>
        /// <param name="courseCode">No Metadata Documentation available.</param>
        /// <param name="programCode">No Metadata Documentation available.</param>
        /// <param name="sessionCode">No Metadata Documentation available.</param>
        /// <param name="semesterCode">No Metadata Documentation available.</param>
        /// <param name="assessmentTypeCode">No Metadata Documentation available.</param>
        /// <param name="value">No Metadata Documentation available.</param>
        /// <param name="noOfAssessment">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Definition> SPDefinitionInsertUpdate(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Int64> facultyCode, Nullable<global::System.Int64> departmentCode, Nullable<global::System.Int64> courseCode, Nullable<global::System.Int64> programCode, Nullable<global::System.Int64> sessionCode, Nullable<global::System.Int64> semesterCode, global::System.String assessmentTypeCode, Nullable<global::System.Decimal> value, Nullable<global::System.Int32> noOfAssessment, Nullable<global::System.DateTime> createdOn, global::System.String createdBy, Nullable<global::System.DateTime> modifiedOn, global::System.String modifiedBy, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter facultyCodeParameter;
            if (facultyCode.HasValue)
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", facultyCode);
            }
            else
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", typeof(global::System.Int64));
            }
    
            ObjectParameter departmentCodeParameter;
            if (departmentCode.HasValue)
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", departmentCode);
            }
            else
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", typeof(global::System.Int64));
            }
    
            ObjectParameter courseCodeParameter;
            if (courseCode.HasValue)
            {
                courseCodeParameter = new ObjectParameter("CourseCode", courseCode);
            }
            else
            {
                courseCodeParameter = new ObjectParameter("CourseCode", typeof(global::System.Int64));
            }
    
            ObjectParameter programCodeParameter;
            if (programCode.HasValue)
            {
                programCodeParameter = new ObjectParameter("ProgramCode", programCode);
            }
            else
            {
                programCodeParameter = new ObjectParameter("ProgramCode", typeof(global::System.Int64));
            }
    
            ObjectParameter sessionCodeParameter;
            if (sessionCode.HasValue)
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", sessionCode);
            }
            else
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", typeof(global::System.Int64));
            }
    
            ObjectParameter semesterCodeParameter;
            if (semesterCode.HasValue)
            {
                semesterCodeParameter = new ObjectParameter("SemesterCode", semesterCode);
            }
            else
            {
                semesterCodeParameter = new ObjectParameter("SemesterCode", typeof(global::System.Int64));
            }
    
            ObjectParameter assessmentTypeCodeParameter;
            if (assessmentTypeCode != null)
            {
                assessmentTypeCodeParameter = new ObjectParameter("AssessmentTypeCode", assessmentTypeCode);
            }
            else
            {
                assessmentTypeCodeParameter = new ObjectParameter("AssessmentTypeCode", typeof(global::System.String));
            }
    
            ObjectParameter valueParameter;
            if (value.HasValue)
            {
                valueParameter = new ObjectParameter("Value", value);
            }
            else
            {
                valueParameter = new ObjectParameter("Value", typeof(global::System.Decimal));
            }
    
            ObjectParameter noOfAssessmentParameter;
            if (noOfAssessment.HasValue)
            {
                noOfAssessmentParameter = new ObjectParameter("NoOfAssessment", noOfAssessment);
            }
            else
            {
                noOfAssessmentParameter = new ObjectParameter("NoOfAssessment", typeof(global::System.Int32));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("CreatedOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("CreatedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("CreatedBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("CreatedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Definition>("SPDefinitionInsertUpdate", codeParameter, universityCodeParameter, facultyCodeParameter, departmentCodeParameter, courseCodeParameter, programCodeParameter, sessionCodeParameter, semesterCodeParameter, assessmentTypeCodeParameter, valueParameter, noOfAssessmentParameter, createdOnParameter, createdByParameter, modifiedOnParameter, modifiedByParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="facultyCode">No Metadata Documentation available.</param>
        /// <param name="departmentCode">No Metadata Documentation available.</param>
        /// <param name="courseCode">No Metadata Documentation available.</param>
        /// <param name="programCode">No Metadata Documentation available.</param>
        /// <param name="sessionCode">No Metadata Documentation available.</param>
        /// <param name="semesterCode">No Metadata Documentation available.</param>
        /// <param name="assessmentTypeCode">No Metadata Documentation available.</param>
        /// <param name="value">No Metadata Documentation available.</param>
        /// <param name="noOfAssessment">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Definition> SPDefinitionInsertUpdate(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Int64> facultyCode, Nullable<global::System.Int64> departmentCode, Nullable<global::System.Int64> courseCode, Nullable<global::System.Int64> programCode, Nullable<global::System.Int64> sessionCode, Nullable<global::System.Int64> semesterCode, global::System.String assessmentTypeCode, Nullable<global::System.Decimal> value, Nullable<global::System.Int32> noOfAssessment, Nullable<global::System.DateTime> createdOn, global::System.String createdBy, Nullable<global::System.DateTime> modifiedOn, global::System.String modifiedBy, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter facultyCodeParameter;
            if (facultyCode.HasValue)
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", facultyCode);
            }
            else
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", typeof(global::System.Int64));
            }
    
            ObjectParameter departmentCodeParameter;
            if (departmentCode.HasValue)
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", departmentCode);
            }
            else
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", typeof(global::System.Int64));
            }
    
            ObjectParameter courseCodeParameter;
            if (courseCode.HasValue)
            {
                courseCodeParameter = new ObjectParameter("CourseCode", courseCode);
            }
            else
            {
                courseCodeParameter = new ObjectParameter("CourseCode", typeof(global::System.Int64));
            }
    
            ObjectParameter programCodeParameter;
            if (programCode.HasValue)
            {
                programCodeParameter = new ObjectParameter("ProgramCode", programCode);
            }
            else
            {
                programCodeParameter = new ObjectParameter("ProgramCode", typeof(global::System.Int64));
            }
    
            ObjectParameter sessionCodeParameter;
            if (sessionCode.HasValue)
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", sessionCode);
            }
            else
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", typeof(global::System.Int64));
            }
    
            ObjectParameter semesterCodeParameter;
            if (semesterCode.HasValue)
            {
                semesterCodeParameter = new ObjectParameter("SemesterCode", semesterCode);
            }
            else
            {
                semesterCodeParameter = new ObjectParameter("SemesterCode", typeof(global::System.Int64));
            }
    
            ObjectParameter assessmentTypeCodeParameter;
            if (assessmentTypeCode != null)
            {
                assessmentTypeCodeParameter = new ObjectParameter("AssessmentTypeCode", assessmentTypeCode);
            }
            else
            {
                assessmentTypeCodeParameter = new ObjectParameter("AssessmentTypeCode", typeof(global::System.String));
            }
    
            ObjectParameter valueParameter;
            if (value.HasValue)
            {
                valueParameter = new ObjectParameter("Value", value);
            }
            else
            {
                valueParameter = new ObjectParameter("Value", typeof(global::System.Decimal));
            }
    
            ObjectParameter noOfAssessmentParameter;
            if (noOfAssessment.HasValue)
            {
                noOfAssessmentParameter = new ObjectParameter("NoOfAssessment", noOfAssessment);
            }
            else
            {
                noOfAssessmentParameter = new ObjectParameter("NoOfAssessment", typeof(global::System.Int32));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("CreatedOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("CreatedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("CreatedBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("CreatedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Definition>("SPDefinitionInsertUpdate", mergeOption, codeParameter, universityCodeParameter, facultyCodeParameter, departmentCodeParameter, courseCodeParameter, programCodeParameter, sessionCodeParameter, semesterCodeParameter, assessmentTypeCodeParameter, valueParameter, noOfAssessmentParameter, createdOnParameter, createdByParameter, modifiedOnParameter, modifiedByParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        public ObjectResult<Definition> SPDefinitionSelect(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Boolean> deleted)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Definition>("SPDefinitionSelect", codeParameter, universityCodeParameter, deletedParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        public ObjectResult<Definition> SPDefinitionSelect(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Boolean> deleted, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Definition>("SPDefinitionSelect", mergeOption, codeParameter, universityCodeParameter, deletedParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Record> SPRecordsDelete(Nullable<global::System.Int64> code, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Record>("SPRecordsDelete", codeParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Record> SPRecordsDelete(Nullable<global::System.Int64> code, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Record>("SPRecordsDelete", mergeOption, codeParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        public ObjectResult<Record> SPRecordsDeletePermanently(Nullable<global::System.Int64> code)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<Record>("SPRecordsDeletePermanently", codeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        public ObjectResult<Record> SPRecordsDeletePermanently(Nullable<global::System.Int64> code, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            return base.ExecuteFunction<Record>("SPRecordsDeletePermanently", mergeOption, codeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="facultyCode">No Metadata Documentation available.</param>
        /// <param name="departmentCode">No Metadata Documentation available.</param>
        /// <param name="courseCode">No Metadata Documentation available.</param>
        /// <param name="programCode">No Metadata Documentation available.</param>
        /// <param name="sessionCode">No Metadata Documentation available.</param>
        /// <param name="semesterCode">No Metadata Documentation available.</param>
        /// <param name="levelCode">No Metadata Documentation available.</param>
        /// <param name="assessmentTypeCode">No Metadata Documentation available.</param>
        /// <param name="subCourseCode">No Metadata Documentation available.</param>
        /// <param name="staffCode">No Metadata Documentation available.</param>
        /// <param name="score">No Metadata Documentation available.</param>
        /// <param name="gradeDescription">No Metadata Documentation available.</param>
        /// <param name="gP">No Metadata Documentation available.</param>
        /// <param name="position">No Metadata Documentation available.</param>
        /// <param name="studentCode">No Metadata Documentation available.</param>
        /// <param name="matricNo">No Metadata Documentation available.</param>
        /// <param name="remark">No Metadata Documentation available.</param>
        /// <param name="screenCode">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Record> SPRecordsInsertUpdate(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Int64> facultyCode, Nullable<global::System.Int64> departmentCode, Nullable<global::System.Int64> courseCode, Nullable<global::System.Int64> programCode, Nullable<global::System.Int64> sessionCode, Nullable<global::System.Int64> semesterCode, Nullable<global::System.Int32> levelCode, global::System.String assessmentTypeCode, global::System.String subCourseCode, global::System.String staffCode, Nullable<global::System.Decimal> score, global::System.String gradeDescription, Nullable<global::System.Decimal> gP, Nullable<global::System.Int64> position, Nullable<global::System.Int64> studentCode, global::System.String matricNo, global::System.String remark, global::System.String screenCode, Nullable<global::System.DateTime> createdOn, global::System.String createdBy, Nullable<global::System.DateTime> modifiedOn, global::System.String modifiedBy, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter facultyCodeParameter;
            if (facultyCode.HasValue)
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", facultyCode);
            }
            else
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", typeof(global::System.Int64));
            }
    
            ObjectParameter departmentCodeParameter;
            if (departmentCode.HasValue)
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", departmentCode);
            }
            else
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", typeof(global::System.Int64));
            }
    
            ObjectParameter courseCodeParameter;
            if (courseCode.HasValue)
            {
                courseCodeParameter = new ObjectParameter("CourseCode", courseCode);
            }
            else
            {
                courseCodeParameter = new ObjectParameter("CourseCode", typeof(global::System.Int64));
            }
    
            ObjectParameter programCodeParameter;
            if (programCode.HasValue)
            {
                programCodeParameter = new ObjectParameter("ProgramCode", programCode);
            }
            else
            {
                programCodeParameter = new ObjectParameter("ProgramCode", typeof(global::System.Int64));
            }
    
            ObjectParameter sessionCodeParameter;
            if (sessionCode.HasValue)
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", sessionCode);
            }
            else
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", typeof(global::System.Int64));
            }
    
            ObjectParameter semesterCodeParameter;
            if (semesterCode.HasValue)
            {
                semesterCodeParameter = new ObjectParameter("SemesterCode", semesterCode);
            }
            else
            {
                semesterCodeParameter = new ObjectParameter("SemesterCode", typeof(global::System.Int64));
            }
    
            ObjectParameter levelCodeParameter;
            if (levelCode.HasValue)
            {
                levelCodeParameter = new ObjectParameter("LevelCode", levelCode);
            }
            else
            {
                levelCodeParameter = new ObjectParameter("LevelCode", typeof(global::System.Int32));
            }
    
            ObjectParameter assessmentTypeCodeParameter;
            if (assessmentTypeCode != null)
            {
                assessmentTypeCodeParameter = new ObjectParameter("AssessmentTypeCode", assessmentTypeCode);
            }
            else
            {
                assessmentTypeCodeParameter = new ObjectParameter("AssessmentTypeCode", typeof(global::System.String));
            }
    
            ObjectParameter subCourseCodeParameter;
            if (subCourseCode != null)
            {
                subCourseCodeParameter = new ObjectParameter("SubCourseCode", subCourseCode);
            }
            else
            {
                subCourseCodeParameter = new ObjectParameter("SubCourseCode", typeof(global::System.String));
            }
    
            ObjectParameter staffCodeParameter;
            if (staffCode != null)
            {
                staffCodeParameter = new ObjectParameter("StaffCode", staffCode);
            }
            else
            {
                staffCodeParameter = new ObjectParameter("StaffCode", typeof(global::System.String));
            }
    
            ObjectParameter scoreParameter;
            if (score.HasValue)
            {
                scoreParameter = new ObjectParameter("Score", score);
            }
            else
            {
                scoreParameter = new ObjectParameter("Score", typeof(global::System.Decimal));
            }
    
            ObjectParameter gradeDescriptionParameter;
            if (gradeDescription != null)
            {
                gradeDescriptionParameter = new ObjectParameter("GradeDescription", gradeDescription);
            }
            else
            {
                gradeDescriptionParameter = new ObjectParameter("GradeDescription", typeof(global::System.String));
            }
    
            ObjectParameter gPParameter;
            if (gP.HasValue)
            {
                gPParameter = new ObjectParameter("GP", gP);
            }
            else
            {
                gPParameter = new ObjectParameter("GP", typeof(global::System.Decimal));
            }
    
            ObjectParameter positionParameter;
            if (position.HasValue)
            {
                positionParameter = new ObjectParameter("Position", position);
            }
            else
            {
                positionParameter = new ObjectParameter("Position", typeof(global::System.Int64));
            }
    
            ObjectParameter studentCodeParameter;
            if (studentCode.HasValue)
            {
                studentCodeParameter = new ObjectParameter("StudentCode", studentCode);
            }
            else
            {
                studentCodeParameter = new ObjectParameter("StudentCode", typeof(global::System.Int64));
            }
    
            ObjectParameter matricNoParameter;
            if (matricNo != null)
            {
                matricNoParameter = new ObjectParameter("MatricNo", matricNo);
            }
            else
            {
                matricNoParameter = new ObjectParameter("MatricNo", typeof(global::System.String));
            }
    
            ObjectParameter remarkParameter;
            if (remark != null)
            {
                remarkParameter = new ObjectParameter("Remark", remark);
            }
            else
            {
                remarkParameter = new ObjectParameter("Remark", typeof(global::System.String));
            }
    
            ObjectParameter screenCodeParameter;
            if (screenCode != null)
            {
                screenCodeParameter = new ObjectParameter("ScreenCode", screenCode);
            }
            else
            {
                screenCodeParameter = new ObjectParameter("ScreenCode", typeof(global::System.String));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("CreatedOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("CreatedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("CreatedBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("CreatedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Record>("SPRecordsInsertUpdate", codeParameter, universityCodeParameter, facultyCodeParameter, departmentCodeParameter, courseCodeParameter, programCodeParameter, sessionCodeParameter, semesterCodeParameter, levelCodeParameter, assessmentTypeCodeParameter, subCourseCodeParameter, staffCodeParameter, scoreParameter, gradeDescriptionParameter, gPParameter, positionParameter, studentCodeParameter, matricNoParameter, remarkParameter, screenCodeParameter, createdOnParameter, createdByParameter, modifiedOnParameter, modifiedByParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="facultyCode">No Metadata Documentation available.</param>
        /// <param name="departmentCode">No Metadata Documentation available.</param>
        /// <param name="courseCode">No Metadata Documentation available.</param>
        /// <param name="programCode">No Metadata Documentation available.</param>
        /// <param name="sessionCode">No Metadata Documentation available.</param>
        /// <param name="semesterCode">No Metadata Documentation available.</param>
        /// <param name="levelCode">No Metadata Documentation available.</param>
        /// <param name="assessmentTypeCode">No Metadata Documentation available.</param>
        /// <param name="subCourseCode">No Metadata Documentation available.</param>
        /// <param name="staffCode">No Metadata Documentation available.</param>
        /// <param name="score">No Metadata Documentation available.</param>
        /// <param name="gradeDescription">No Metadata Documentation available.</param>
        /// <param name="gP">No Metadata Documentation available.</param>
        /// <param name="position">No Metadata Documentation available.</param>
        /// <param name="studentCode">No Metadata Documentation available.</param>
        /// <param name="matricNo">No Metadata Documentation available.</param>
        /// <param name="remark">No Metadata Documentation available.</param>
        /// <param name="screenCode">No Metadata Documentation available.</param>
        /// <param name="createdOn">No Metadata Documentation available.</param>
        /// <param name="createdBy">No Metadata Documentation available.</param>
        /// <param name="modifiedOn">No Metadata Documentation available.</param>
        /// <param name="modifiedBy">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        /// <param name="deletedOn">No Metadata Documentation available.</param>
        /// <param name="deletedBy">No Metadata Documentation available.</param>
        public ObjectResult<Record> SPRecordsInsertUpdate(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Int64> facultyCode, Nullable<global::System.Int64> departmentCode, Nullable<global::System.Int64> courseCode, Nullable<global::System.Int64> programCode, Nullable<global::System.Int64> sessionCode, Nullable<global::System.Int64> semesterCode, Nullable<global::System.Int32> levelCode, global::System.String assessmentTypeCode, global::System.String subCourseCode, global::System.String staffCode, Nullable<global::System.Decimal> score, global::System.String gradeDescription, Nullable<global::System.Decimal> gP, Nullable<global::System.Int64> position, Nullable<global::System.Int64> studentCode, global::System.String matricNo, global::System.String remark, global::System.String screenCode, Nullable<global::System.DateTime> createdOn, global::System.String createdBy, Nullable<global::System.DateTime> modifiedOn, global::System.String modifiedBy, Nullable<global::System.Boolean> deleted, Nullable<global::System.DateTime> deletedOn, global::System.String deletedBy, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter facultyCodeParameter;
            if (facultyCode.HasValue)
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", facultyCode);
            }
            else
            {
                facultyCodeParameter = new ObjectParameter("FacultyCode", typeof(global::System.Int64));
            }
    
            ObjectParameter departmentCodeParameter;
            if (departmentCode.HasValue)
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", departmentCode);
            }
            else
            {
                departmentCodeParameter = new ObjectParameter("DepartmentCode", typeof(global::System.Int64));
            }
    
            ObjectParameter courseCodeParameter;
            if (courseCode.HasValue)
            {
                courseCodeParameter = new ObjectParameter("CourseCode", courseCode);
            }
            else
            {
                courseCodeParameter = new ObjectParameter("CourseCode", typeof(global::System.Int64));
            }
    
            ObjectParameter programCodeParameter;
            if (programCode.HasValue)
            {
                programCodeParameter = new ObjectParameter("ProgramCode", programCode);
            }
            else
            {
                programCodeParameter = new ObjectParameter("ProgramCode", typeof(global::System.Int64));
            }
    
            ObjectParameter sessionCodeParameter;
            if (sessionCode.HasValue)
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", sessionCode);
            }
            else
            {
                sessionCodeParameter = new ObjectParameter("SessionCode", typeof(global::System.Int64));
            }
    
            ObjectParameter semesterCodeParameter;
            if (semesterCode.HasValue)
            {
                semesterCodeParameter = new ObjectParameter("SemesterCode", semesterCode);
            }
            else
            {
                semesterCodeParameter = new ObjectParameter("SemesterCode", typeof(global::System.Int64));
            }
    
            ObjectParameter levelCodeParameter;
            if (levelCode.HasValue)
            {
                levelCodeParameter = new ObjectParameter("LevelCode", levelCode);
            }
            else
            {
                levelCodeParameter = new ObjectParameter("LevelCode", typeof(global::System.Int32));
            }
    
            ObjectParameter assessmentTypeCodeParameter;
            if (assessmentTypeCode != null)
            {
                assessmentTypeCodeParameter = new ObjectParameter("AssessmentTypeCode", assessmentTypeCode);
            }
            else
            {
                assessmentTypeCodeParameter = new ObjectParameter("AssessmentTypeCode", typeof(global::System.String));
            }
    
            ObjectParameter subCourseCodeParameter;
            if (subCourseCode != null)
            {
                subCourseCodeParameter = new ObjectParameter("SubCourseCode", subCourseCode);
            }
            else
            {
                subCourseCodeParameter = new ObjectParameter("SubCourseCode", typeof(global::System.String));
            }
    
            ObjectParameter staffCodeParameter;
            if (staffCode != null)
            {
                staffCodeParameter = new ObjectParameter("StaffCode", staffCode);
            }
            else
            {
                staffCodeParameter = new ObjectParameter("StaffCode", typeof(global::System.String));
            }
    
            ObjectParameter scoreParameter;
            if (score.HasValue)
            {
                scoreParameter = new ObjectParameter("Score", score);
            }
            else
            {
                scoreParameter = new ObjectParameter("Score", typeof(global::System.Decimal));
            }
    
            ObjectParameter gradeDescriptionParameter;
            if (gradeDescription != null)
            {
                gradeDescriptionParameter = new ObjectParameter("GradeDescription", gradeDescription);
            }
            else
            {
                gradeDescriptionParameter = new ObjectParameter("GradeDescription", typeof(global::System.String));
            }
    
            ObjectParameter gPParameter;
            if (gP.HasValue)
            {
                gPParameter = new ObjectParameter("GP", gP);
            }
            else
            {
                gPParameter = new ObjectParameter("GP", typeof(global::System.Decimal));
            }
    
            ObjectParameter positionParameter;
            if (position.HasValue)
            {
                positionParameter = new ObjectParameter("Position", position);
            }
            else
            {
                positionParameter = new ObjectParameter("Position", typeof(global::System.Int64));
            }
    
            ObjectParameter studentCodeParameter;
            if (studentCode.HasValue)
            {
                studentCodeParameter = new ObjectParameter("StudentCode", studentCode);
            }
            else
            {
                studentCodeParameter = new ObjectParameter("StudentCode", typeof(global::System.Int64));
            }
    
            ObjectParameter matricNoParameter;
            if (matricNo != null)
            {
                matricNoParameter = new ObjectParameter("MatricNo", matricNo);
            }
            else
            {
                matricNoParameter = new ObjectParameter("MatricNo", typeof(global::System.String));
            }
    
            ObjectParameter remarkParameter;
            if (remark != null)
            {
                remarkParameter = new ObjectParameter("Remark", remark);
            }
            else
            {
                remarkParameter = new ObjectParameter("Remark", typeof(global::System.String));
            }
    
            ObjectParameter screenCodeParameter;
            if (screenCode != null)
            {
                screenCodeParameter = new ObjectParameter("ScreenCode", screenCode);
            }
            else
            {
                screenCodeParameter = new ObjectParameter("ScreenCode", typeof(global::System.String));
            }
    
            ObjectParameter createdOnParameter;
            if (createdOn.HasValue)
            {
                createdOnParameter = new ObjectParameter("CreatedOn", createdOn);
            }
            else
            {
                createdOnParameter = new ObjectParameter("CreatedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter createdByParameter;
            if (createdBy != null)
            {
                createdByParameter = new ObjectParameter("CreatedBy", createdBy);
            }
            else
            {
                createdByParameter = new ObjectParameter("CreatedBy", typeof(global::System.String));
            }
    
            ObjectParameter modifiedOnParameter;
            if (modifiedOn.HasValue)
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", modifiedOn);
            }
            else
            {
                modifiedOnParameter = new ObjectParameter("ModifiedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter modifiedByParameter;
            if (modifiedBy != null)
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", modifiedBy);
            }
            else
            {
                modifiedByParameter = new ObjectParameter("ModifiedBy", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            ObjectParameter deletedOnParameter;
            if (deletedOn.HasValue)
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", deletedOn);
            }
            else
            {
                deletedOnParameter = new ObjectParameter("DeletedOn", typeof(global::System.DateTime));
            }
    
            ObjectParameter deletedByParameter;
            if (deletedBy != null)
            {
                deletedByParameter = new ObjectParameter("DeletedBy", deletedBy);
            }
            else
            {
                deletedByParameter = new ObjectParameter("DeletedBy", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Record>("SPRecordsInsertUpdate", mergeOption, codeParameter, universityCodeParameter, facultyCodeParameter, departmentCodeParameter, courseCodeParameter, programCodeParameter, sessionCodeParameter, semesterCodeParameter, levelCodeParameter, assessmentTypeCodeParameter, subCourseCodeParameter, staffCodeParameter, scoreParameter, gradeDescriptionParameter, gPParameter, positionParameter, studentCodeParameter, matricNoParameter, remarkParameter, screenCodeParameter, createdOnParameter, createdByParameter, modifiedOnParameter, modifiedByParameter, deletedParameter, deletedOnParameter, deletedByParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        public ObjectResult<Record> SPRecordsSelect(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Boolean> deleted)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Record>("SPRecordsSelect", codeParameter, universityCodeParameter, deletedParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="code">No Metadata Documentation available.</param>
        /// <param name="universityCode">No Metadata Documentation available.</param>
        /// <param name="deleted">No Metadata Documentation available.</param>
        public ObjectResult<Record> SPRecordsSelect(Nullable<global::System.Int64> code, global::System.String universityCode, Nullable<global::System.Boolean> deleted, MergeOption mergeOption)
        {
            ObjectParameter codeParameter;
            if (code.HasValue)
            {
                codeParameter = new ObjectParameter("Code", code);
            }
            else
            {
                codeParameter = new ObjectParameter("Code", typeof(global::System.Int64));
            }
    
            ObjectParameter universityCodeParameter;
            if (universityCode != null)
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", universityCode);
            }
            else
            {
                universityCodeParameter = new ObjectParameter("UniversityCode", typeof(global::System.String));
            }
    
            ObjectParameter deletedParameter;
            if (deleted.HasValue)
            {
                deletedParameter = new ObjectParameter("Deleted", deleted);
            }
            else
            {
                deletedParameter = new ObjectParameter("Deleted", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Record>("SPRecordsSelect", mergeOption, codeParameter, universityCodeParameter, deletedParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Assessment", Name="Attendance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attendance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attendance object.
        /// </summary>
        /// <param name="code">Initial value of the Code property.</param>
        public static Attendance CreateAttendance(global::System.Int64 code)
        {
            Attendance attendance = new Attendance();
            attendance.Code = code;
            return attendance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Code
        {
            get
            {
                return _Code;
            }
            set
            {
                if (_Code != value)
                {
                    OnCodeChanging(value);
                    ReportPropertyChanging("Code");
                    _Code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Code");
                    OnCodeChanged();
                }
            }
        }
        private global::System.Int64 _Code;
        partial void OnCodeChanging(global::System.Int64 value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UniversityCode
        {
            get
            {
                return _UniversityCode;
            }
            set
            {
                OnUniversityCodeChanging(value);
                ReportPropertyChanging("UniversityCode");
                _UniversityCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UniversityCode");
                OnUniversityCodeChanged();
            }
        }
        private global::System.String _UniversityCode;
        partial void OnUniversityCodeChanging(global::System.String value);
        partial void OnUniversityCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> FacultyCode
        {
            get
            {
                return _FacultyCode;
            }
            set
            {
                OnFacultyCodeChanging(value);
                ReportPropertyChanging("FacultyCode");
                _FacultyCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyCode");
                OnFacultyCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _FacultyCode;
        partial void OnFacultyCodeChanging(Nullable<global::System.Int64> value);
        partial void OnFacultyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DepartmentCode
        {
            get
            {
                return _DepartmentCode;
            }
            set
            {
                OnDepartmentCodeChanging(value);
                ReportPropertyChanging("DepartmentCode");
                _DepartmentCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentCode");
                OnDepartmentCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _DepartmentCode;
        partial void OnDepartmentCodeChanging(Nullable<global::System.Int64> value);
        partial void OnDepartmentCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CourseCode
        {
            get
            {
                return _CourseCode;
            }
            set
            {
                OnCourseCodeChanging(value);
                ReportPropertyChanging("CourseCode");
                _CourseCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseCode");
                OnCourseCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _CourseCode;
        partial void OnCourseCodeChanging(Nullable<global::System.Int64> value);
        partial void OnCourseCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ProgramCode
        {
            get
            {
                return _ProgramCode;
            }
            set
            {
                OnProgramCodeChanging(value);
                ReportPropertyChanging("ProgramCode");
                _ProgramCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProgramCode");
                OnProgramCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _ProgramCode;
        partial void OnProgramCodeChanging(Nullable<global::System.Int64> value);
        partial void OnProgramCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelCode
        {
            get
            {
                return _LevelCode;
            }
            set
            {
                OnLevelCodeChanging(value);
                ReportPropertyChanging("LevelCode");
                _LevelCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelCode");
                OnLevelCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelCode;
        partial void OnLevelCodeChanging(Nullable<global::System.Int32> value);
        partial void OnLevelCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> StudentCode
        {
            get
            {
                return _StudentCode;
            }
            set
            {
                OnStudentCodeChanging(value);
                ReportPropertyChanging("StudentCode");
                _StudentCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentCode");
                OnStudentCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _StudentCode;
        partial void OnStudentCodeChanging(Nullable<global::System.Int64> value);
        partial void OnStudentCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MatricNo
        {
            get
            {
                return _MatricNo;
            }
            set
            {
                OnMatricNoChanging(value);
                ReportPropertyChanging("MatricNo");
                _MatricNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MatricNo");
                OnMatricNoChanged();
            }
        }
        private global::System.String _MatricNo;
        partial void OnMatricNoChanging(global::System.String value);
        partial void OnMatricNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SessionCode
        {
            get
            {
                return _SessionCode;
            }
            set
            {
                OnSessionCodeChanging(value);
                ReportPropertyChanging("SessionCode");
                _SessionCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionCode");
                OnSessionCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _SessionCode;
        partial void OnSessionCodeChanging(Nullable<global::System.Int64> value);
        partial void OnSessionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SemesterCode
        {
            get
            {
                return _SemesterCode;
            }
            set
            {
                OnSemesterCodeChanging(value);
                ReportPropertyChanging("SemesterCode");
                _SemesterCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SemesterCode");
                OnSemesterCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _SemesterCode;
        partial void OnSemesterCodeChanging(Nullable<global::System.Int64> value);
        partial void OnSemesterCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttendanceStatus
        {
            get
            {
                return _AttendanceStatus;
            }
            set
            {
                OnAttendanceStatusChanging(value);
                ReportPropertyChanging("AttendanceStatus");
                _AttendanceStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttendanceStatus");
                OnAttendanceStatusChanged();
            }
        }
        private global::System.String _AttendanceStatus;
        partial void OnAttendanceStatusChanging(global::System.String value);
        partial void OnAttendanceStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StaffCode
        {
            get
            {
                return _StaffCode;
            }
            set
            {
                OnStaffCodeChanging(value);
                ReportPropertyChanging("StaffCode");
                _StaffCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StaffCode");
                OnStaffCodeChanged();
            }
        }
        private global::System.String _StaffCode;
        partial void OnStaffCodeChanging(global::System.String value);
        partial void OnStaffCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SubCourseCode
        {
            get
            {
                return _SubCourseCode;
            }
            set
            {
                OnSubCourseCodeChanging(value);
                ReportPropertyChanging("SubCourseCode");
                _SubCourseCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubCourseCode");
                OnSubCourseCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _SubCourseCode;
        partial void OnSubCourseCodeChanging(Nullable<global::System.Int64> value);
        partial void OnSubCourseCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AttendanceType
        {
            get
            {
                return _AttendanceType;
            }
            set
            {
                OnAttendanceTypeChanging(value);
                ReportPropertyChanging("AttendanceType");
                _AttendanceType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AttendanceType");
                OnAttendanceTypeChanged();
            }
        }
        private global::System.String _AttendanceType;
        partial void OnAttendanceTypeChanging(global::System.String value);
        partial void OnAttendanceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScreenCode
        {
            get
            {
                return _ScreenCode;
            }
            set
            {
                OnScreenCodeChanging(value);
                ReportPropertyChanging("ScreenCode");
                _ScreenCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ScreenCode");
                OnScreenCodeChanged();
            }
        }
        private global::System.String _ScreenCode;
        partial void OnScreenCodeChanging(global::System.String value);
        partial void OnScreenCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private global::System.String _DeletedBy;
        partial void OnDeletedByChanging(global::System.String value);
        partial void OnDeletedByChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Assessment", Name="Definition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Definition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Definition object.
        /// </summary>
        /// <param name="code">Initial value of the Code property.</param>
        public static Definition CreateDefinition(global::System.Int64 code)
        {
            Definition definition = new Definition();
            definition.Code = code;
            return definition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Code
        {
            get
            {
                return _Code;
            }
            set
            {
                if (_Code != value)
                {
                    OnCodeChanging(value);
                    ReportPropertyChanging("Code");
                    _Code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Code");
                    OnCodeChanged();
                }
            }
        }
        private global::System.Int64 _Code;
        partial void OnCodeChanging(global::System.Int64 value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UniversityCode
        {
            get
            {
                return _UniversityCode;
            }
            set
            {
                OnUniversityCodeChanging(value);
                ReportPropertyChanging("UniversityCode");
                _UniversityCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UniversityCode");
                OnUniversityCodeChanged();
            }
        }
        private global::System.String _UniversityCode;
        partial void OnUniversityCodeChanging(global::System.String value);
        partial void OnUniversityCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> FacultyCode
        {
            get
            {
                return _FacultyCode;
            }
            set
            {
                OnFacultyCodeChanging(value);
                ReportPropertyChanging("FacultyCode");
                _FacultyCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyCode");
                OnFacultyCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _FacultyCode;
        partial void OnFacultyCodeChanging(Nullable<global::System.Int64> value);
        partial void OnFacultyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DepartmentCode
        {
            get
            {
                return _DepartmentCode;
            }
            set
            {
                OnDepartmentCodeChanging(value);
                ReportPropertyChanging("DepartmentCode");
                _DepartmentCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentCode");
                OnDepartmentCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _DepartmentCode;
        partial void OnDepartmentCodeChanging(Nullable<global::System.Int64> value);
        partial void OnDepartmentCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CourseCode
        {
            get
            {
                return _CourseCode;
            }
            set
            {
                OnCourseCodeChanging(value);
                ReportPropertyChanging("CourseCode");
                _CourseCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseCode");
                OnCourseCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _CourseCode;
        partial void OnCourseCodeChanging(Nullable<global::System.Int64> value);
        partial void OnCourseCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ProgramCode
        {
            get
            {
                return _ProgramCode;
            }
            set
            {
                OnProgramCodeChanging(value);
                ReportPropertyChanging("ProgramCode");
                _ProgramCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProgramCode");
                OnProgramCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _ProgramCode;
        partial void OnProgramCodeChanging(Nullable<global::System.Int64> value);
        partial void OnProgramCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SessionCode
        {
            get
            {
                return _SessionCode;
            }
            set
            {
                OnSessionCodeChanging(value);
                ReportPropertyChanging("SessionCode");
                _SessionCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionCode");
                OnSessionCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _SessionCode;
        partial void OnSessionCodeChanging(Nullable<global::System.Int64> value);
        partial void OnSessionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SemesterCode
        {
            get
            {
                return _SemesterCode;
            }
            set
            {
                OnSemesterCodeChanging(value);
                ReportPropertyChanging("SemesterCode");
                _SemesterCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SemesterCode");
                OnSemesterCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _SemesterCode;
        partial void OnSemesterCodeChanging(Nullable<global::System.Int64> value);
        partial void OnSemesterCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssessmentTypeCode
        {
            get
            {
                return _AssessmentTypeCode;
            }
            set
            {
                OnAssessmentTypeCodeChanging(value);
                ReportPropertyChanging("AssessmentTypeCode");
                _AssessmentTypeCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AssessmentTypeCode");
                OnAssessmentTypeCodeChanged();
            }
        }
        private global::System.String _AssessmentTypeCode;
        partial void OnAssessmentTypeCodeChanging(global::System.String value);
        partial void OnAssessmentTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _Value;
        partial void OnValueChanging(Nullable<global::System.Decimal> value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfAssessment
        {
            get
            {
                return _NoOfAssessment;
            }
            set
            {
                OnNoOfAssessmentChanging(value);
                ReportPropertyChanging("NoOfAssessment");
                _NoOfAssessment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfAssessment");
                OnNoOfAssessmentChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfAssessment;
        partial void OnNoOfAssessmentChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfAssessmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private global::System.String _DeletedBy;
        partial void OnDeletedByChanging(global::System.String value);
        partial void OnDeletedByChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Assessment", Name="Record")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Record : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Record object.
        /// </summary>
        /// <param name="code">Initial value of the Code property.</param>
        public static Record CreateRecord(global::System.Int64 code)
        {
            Record record = new Record();
            record.Code = code;
            return record;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Code
        {
            get
            {
                return _Code;
            }
            set
            {
                if (_Code != value)
                {
                    OnCodeChanging(value);
                    ReportPropertyChanging("Code");
                    _Code = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Code");
                    OnCodeChanged();
                }
            }
        }
        private global::System.Int64 _Code;
        partial void OnCodeChanging(global::System.Int64 value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UniversityCode
        {
            get
            {
                return _UniversityCode;
            }
            set
            {
                OnUniversityCodeChanging(value);
                ReportPropertyChanging("UniversityCode");
                _UniversityCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UniversityCode");
                OnUniversityCodeChanged();
            }
        }
        private global::System.String _UniversityCode;
        partial void OnUniversityCodeChanging(global::System.String value);
        partial void OnUniversityCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> FacultyCode
        {
            get
            {
                return _FacultyCode;
            }
            set
            {
                OnFacultyCodeChanging(value);
                ReportPropertyChanging("FacultyCode");
                _FacultyCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FacultyCode");
                OnFacultyCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _FacultyCode;
        partial void OnFacultyCodeChanging(Nullable<global::System.Int64> value);
        partial void OnFacultyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DepartmentCode
        {
            get
            {
                return _DepartmentCode;
            }
            set
            {
                OnDepartmentCodeChanging(value);
                ReportPropertyChanging("DepartmentCode");
                _DepartmentCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentCode");
                OnDepartmentCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _DepartmentCode;
        partial void OnDepartmentCodeChanging(Nullable<global::System.Int64> value);
        partial void OnDepartmentCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CourseCode
        {
            get
            {
                return _CourseCode;
            }
            set
            {
                OnCourseCodeChanging(value);
                ReportPropertyChanging("CourseCode");
                _CourseCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CourseCode");
                OnCourseCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _CourseCode;
        partial void OnCourseCodeChanging(Nullable<global::System.Int64> value);
        partial void OnCourseCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ProgramCode
        {
            get
            {
                return _ProgramCode;
            }
            set
            {
                OnProgramCodeChanging(value);
                ReportPropertyChanging("ProgramCode");
                _ProgramCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProgramCode");
                OnProgramCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _ProgramCode;
        partial void OnProgramCodeChanging(Nullable<global::System.Int64> value);
        partial void OnProgramCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SessionCode
        {
            get
            {
                return _SessionCode;
            }
            set
            {
                OnSessionCodeChanging(value);
                ReportPropertyChanging("SessionCode");
                _SessionCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionCode");
                OnSessionCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _SessionCode;
        partial void OnSessionCodeChanging(Nullable<global::System.Int64> value);
        partial void OnSessionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SemesterCode
        {
            get
            {
                return _SemesterCode;
            }
            set
            {
                OnSemesterCodeChanging(value);
                ReportPropertyChanging("SemesterCode");
                _SemesterCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SemesterCode");
                OnSemesterCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _SemesterCode;
        partial void OnSemesterCodeChanging(Nullable<global::System.Int64> value);
        partial void OnSemesterCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LevelCode
        {
            get
            {
                return _LevelCode;
            }
            set
            {
                OnLevelCodeChanging(value);
                ReportPropertyChanging("LevelCode");
                _LevelCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelCode");
                OnLevelCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _LevelCode;
        partial void OnLevelCodeChanging(Nullable<global::System.Int32> value);
        partial void OnLevelCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssessmentTypeCode
        {
            get
            {
                return _AssessmentTypeCode;
            }
            set
            {
                OnAssessmentTypeCodeChanging(value);
                ReportPropertyChanging("AssessmentTypeCode");
                _AssessmentTypeCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AssessmentTypeCode");
                OnAssessmentTypeCodeChanged();
            }
        }
        private global::System.String _AssessmentTypeCode;
        partial void OnAssessmentTypeCodeChanging(global::System.String value);
        partial void OnAssessmentTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubCourseCode
        {
            get
            {
                return _SubCourseCode;
            }
            set
            {
                OnSubCourseCodeChanging(value);
                ReportPropertyChanging("SubCourseCode");
                _SubCourseCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubCourseCode");
                OnSubCourseCodeChanged();
            }
        }
        private global::System.String _SubCourseCode;
        partial void OnSubCourseCodeChanging(global::System.String value);
        partial void OnSubCourseCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StaffCode
        {
            get
            {
                return _StaffCode;
            }
            set
            {
                OnStaffCodeChanging(value);
                ReportPropertyChanging("StaffCode");
                _StaffCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StaffCode");
                OnStaffCodeChanged();
            }
        }
        private global::System.String _StaffCode;
        partial void OnStaffCodeChanging(global::System.String value);
        partial void OnStaffCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _Score;
        partial void OnScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GradeDescription
        {
            get
            {
                return _GradeDescription;
            }
            set
            {
                OnGradeDescriptionChanging(value);
                ReportPropertyChanging("GradeDescription");
                _GradeDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GradeDescription");
                OnGradeDescriptionChanged();
            }
        }
        private global::System.String _GradeDescription;
        partial void OnGradeDescriptionChanging(global::System.String value);
        partial void OnGradeDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GP
        {
            get
            {
                return _GP;
            }
            set
            {
                OnGPChanging(value);
                ReportPropertyChanging("GP");
                _GP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GP");
                OnGPChanged();
            }
        }
        private Nullable<global::System.Decimal> _GP;
        partial void OnGPChanging(Nullable<global::System.Decimal> value);
        partial void OnGPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private Nullable<global::System.Int64> _Position;
        partial void OnPositionChanging(Nullable<global::System.Int64> value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> StudentCode
        {
            get
            {
                return _StudentCode;
            }
            set
            {
                OnStudentCodeChanging(value);
                ReportPropertyChanging("StudentCode");
                _StudentCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentCode");
                OnStudentCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _StudentCode;
        partial void OnStudentCodeChanging(Nullable<global::System.Int64> value);
        partial void OnStudentCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MatricNo
        {
            get
            {
                return _MatricNo;
            }
            set
            {
                OnMatricNoChanging(value);
                ReportPropertyChanging("MatricNo");
                _MatricNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MatricNo");
                OnMatricNoChanged();
            }
        }
        private global::System.String _MatricNo;
        partial void OnMatricNoChanging(global::System.String value);
        partial void OnMatricNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScreenCode
        {
            get
            {
                return _ScreenCode;
            }
            set
            {
                OnScreenCodeChanging(value);
                ReportPropertyChanging("ScreenCode");
                _ScreenCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ScreenCode");
                OnScreenCodeChanged();
            }
        }
        private global::System.String _ScreenCode;
        partial void OnScreenCodeChanging(global::System.String value);
        partial void OnScreenCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedOn
        {
            get
            {
                return _ModifiedOn;
            }
            set
            {
                OnModifiedOnChanging(value);
                ReportPropertyChanging("ModifiedOn");
                _ModifiedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedOn");
                OnModifiedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedOn;
        partial void OnModifiedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedBy
        {
            get
            {
                return _ModifiedBy;
            }
            set
            {
                OnModifiedByChanging(value);
                ReportPropertyChanging("ModifiedBy");
                _ModifiedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModifiedBy");
                OnModifiedByChanged();
            }
        }
        private global::System.String _ModifiedBy;
        partial void OnModifiedByChanging(global::System.String value);
        partial void OnModifiedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private global::System.String _DeletedBy;
        partial void OnDeletedByChanging(global::System.String value);
        partial void OnDeletedByChanged();

        #endregion
    
    }

    #endregion
    
}
